[2025-10-09 19:43:52,914] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-09 19:47:22,702] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-09 19:49:35,793] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-09 19:51:26,326] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-09 19:51:33,138] [DEBUG] [logging_decorator.py:64 - wrapper()] ▶️ Executing: app.domain.user.service.UserService.create args=(UserCreate(username='string', email='string', full_name='string', role='user', is_active=True, password='string'),), kwargs={}
[2025-10-09 19:51:33,219] [ERROR] [logging_decorator.py:79 - wrapper()] Error in app.domain.user.service.UserService.create after 80.03 ms: 400: Email already registered.
Traceback (most recent call last):
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/app/core/logging_decorator.py", line 68, in wrapper
    result = __method(self, *args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/app/domain/user/service.py", line 30, in create
    raise HTTPException(
fastapi.exceptions.HTTPException: 400: Email already registered.
[2025-10-09 19:51:44,033] [DEBUG] [logging_decorator.py:64 - wrapper()] ▶️ Executing: app.domain.user.service.UserService.create args=(UserCreate(username='string', email='abramian', full_name='string', role='user', is_active=True, password='string'),), kwargs={}
[2025-10-09 19:51:44,041] [ERROR] [logging_decorator.py:79 - wrapper()] Error in app.domain.user.service.UserService.create after 6.78 ms: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "ix_user_username"
DETAIL:  Key (username)=(string) already exists.

[SQL: INSERT INTO "user" (username, email, full_name, password, role, is_active, created_at, updated_at) VALUES (%(username)s, %(email)s, %(full_name)s, %(password)s, %(role)s, %(is_active)s, %(created_at)s, %(updated_at)s) RETURNING "user".id]
[parameters: {'username': 'string', 'email': 'abramian', 'full_name': 'string', 'password': 'string', 'role': 'user', 'is_active': True, 'created_at': datetime.datetime(2025, 10, 9, 19, 51, 44, 37706), 'updated_at': datetime.datetime(2025, 10, 9, 19, 51, 44, 37712)}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 951, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UniqueViolation: duplicate key value violates unique constraint "ix_user_username"
DETAIL:  Key (username)=(string) already exists.


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/app/core/logging_decorator.py", line 68, in wrapper
    result = __method(self, *args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/app/domain/user/service.py", line 36, in create
    return self.repo.create(obj)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/app/domain/user/repository.py", line 20, in create
    self.session.commit()
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 2032, in commit
    trans.commit(_to_root=True)
  File "<string>", line 2, in commit
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py", line 137, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1313, in commit
    self._prepare_impl()
  File "<string>", line 2, in _prepare_impl
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py", line 137, in _go
    ret_value = fn(self, *arg, **kw)
                ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 1288, in _prepare_impl
    self.session.flush()
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 4345, in flush
    self._flush(objects)
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 4480, in _flush
    with util.safe_reraise():
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/orm/session.py", line 4441, in _flush
    flush_context.execute()
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py", line 466, in execute
    rec.execute(self)
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/orm/unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/orm/persistence.py", line 93, in save_obj
    _emit_insert_statements(
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/orm/persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
             ^^^^^^^^^^^^^^^^^^^
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1419, in execute
    return meth(
           ^^^^^
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/sql/elements.py", line 526, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1641, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/mnt/c/Users/abram/Documents/crecenia/chatbot-rag/venv-linux/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 951, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.IntegrityError: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint "ix_user_username"
DETAIL:  Key (username)=(string) already exists.

[SQL: INSERT INTO "user" (username, email, full_name, password, role, is_active, created_at, updated_at) VALUES (%(username)s, %(email)s, %(full_name)s, %(password)s, %(role)s, %(is_active)s, %(created_at)s, %(updated_at)s) RETURNING "user".id]
[parameters: {'username': 'string', 'email': 'abramian', 'full_name': 'string', 'password': 'string', 'role': 'user', 'is_active': True, 'created_at': datetime.datetime(2025, 10, 9, 19, 51, 44, 37706), 'updated_at': datetime.datetime(2025, 10, 9, 19, 51, 44, 37712)}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
[2025-10-09 19:52:07,418] [DEBUG] [logging_decorator.py:64 - wrapper()] ▶️ Executing: app.domain.user.service.UserService.create args=(UserCreate(username='abramian', email='abramian', full_name='string', role='user', is_active=True, password='string'),), kwargs={}
[2025-10-09 19:52:07,430] [DEBUG] [logging_decorator.py:72 - wrapper()] ✅ app.domain.user.service.UserService.create completed in 10.32 ms
[2025-10-09 19:53:00,969] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-09 19:53:53,086] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-09 19:54:43,725] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-09 19:55:33,622] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-09 20:48:02,995] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-09 20:49:33,063] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-09 20:51:48,585] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-09 20:51:48,618] [DEBUG] [logging_decorator.py:64 - wrapper()] ▶️ Executing: app.domain.user.service.UserService.create args=(UserCreate(username='Markus', email='abramianmedina@gmail.com', full_name='Markus Abramian Medina', role='user', is_active=True, password='1234'),), kwargs={}
[2025-10-09 20:51:48,699] [DEBUG] [logging_decorator.py:72 - wrapper()] ✅ app.domain.user.service.UserService.create completed in 80.11 ms
[2025-10-09 23:00:14,784] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-09 23:01:04,462] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 20:56:41,784] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 20:56:53,712] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:17:36,561] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:19:16,551] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:19:21,299] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:19:25,932] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:24:35,039] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:24:47,336] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:24:51,974] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:24:56,622] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:25:28,289] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:25:32,958] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:25:37,589] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:28:00,635] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:28:05,244] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:28:26,231] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:28:30,868] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:29:38,078] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:51:43,589] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:51:48,155] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:51:59,338] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:55:23,745] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:55:28,359] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:55:35,213] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:55:39,950] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:58:03,192] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:58:24,624] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 21:58:39,941] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 22:03:10,612] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:03:10,612] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[42:61]
[2025-10-10 22:03:10,613] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[63:86]
[2025-10-10 22:03:10,613] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:03:10,613] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:03:10,613] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[90:102]
[2025-10-10 22:03:10,613] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:03:10,613] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:03:10,613] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[146:165]
[2025-10-10 22:03:10,613] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[167:196]
[2025-10-10 22:03:10,613] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:03:10,613] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:03:10,613] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[200:211]
[2025-10-10 22:03:10,613] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:03:10,613] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:03:10,613] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[255:274]
[2025-10-10 22:03:10,613] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[276:302]
[2025-10-10 22:03:10,613] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:03:10,613] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:03:10,613] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[306:307]
[2025-10-10 22:03:10,614] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:03:10,614] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:03:10,614] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[351:370]
[2025-10-10 22:03:10,614] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[372:428]
[2025-10-10 22:03:10,614] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:03:10,614] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[430:442]
[2025-10-10 22:03:10,614] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[444:515]
[2025-10-10 22:03:10,614] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:03:10,614] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:03:10,614] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[519:16384]
[2025-10-10 22:03:10,614] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:212992]
[2025-10-10 22:03:10,615] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:196608]
[2025-10-10 22:03:10,615] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:180224]
[2025-10-10 22:03:10,616] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:114688]
[2025-10-10 22:03:10,616] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:98304]
[2025-10-10 22:03:10,616] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:85388]
[2025-10-10 22:03:10,616] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:03:10,616] [DEBUG] [multipart.py:628 - callback()] Calling on_end with no data
[2025-10-10 22:03:58,867] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 22:03:58,877] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:03:58,877] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[42:61]
[2025-10-10 22:03:58,877] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[63:86]
[2025-10-10 22:03:58,877] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:03:58,877] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:03:58,877] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[90:102]
[2025-10-10 22:03:58,878] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:03:58,878] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:03:58,878] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[146:165]
[2025-10-10 22:03:58,878] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[167:196]
[2025-10-10 22:03:58,878] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:03:58,878] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:03:58,878] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[200:211]
[2025-10-10 22:03:58,878] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:03:58,878] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:03:58,878] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[255:274]
[2025-10-10 22:03:58,878] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[276:302]
[2025-10-10 22:03:58,878] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:03:58,878] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:03:58,878] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[306:307]
[2025-10-10 22:03:58,878] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:03:58,878] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:03:58,878] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[351:370]
[2025-10-10 22:03:58,878] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[372:428]
[2025-10-10 22:03:58,879] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:03:58,879] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[430:442]
[2025-10-10 22:03:58,879] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[444:515]
[2025-10-10 22:03:58,879] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:03:58,879] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:03:58,879] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[519:196608]
[2025-10-10 22:03:58,880] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:245760]
[2025-10-10 22:03:58,880] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:180224]
[2025-10-10 22:03:58,880] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:114688]
[2025-10-10 22:03:58,880] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:114688]
[2025-10-10 22:03:58,881] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:52620]
[2025-10-10 22:03:58,881] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:03:58,881] [DEBUG] [multipart.py:628 - callback()] Calling on_end with no data
[2025-10-10 22:07:31,459] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 22:07:35,288] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 22:07:38,734] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:07:38,734] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[42:61]
[2025-10-10 22:07:38,734] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[63:86]
[2025-10-10 22:07:38,734] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:07:38,734] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:07:38,734] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[90:102]
[2025-10-10 22:07:38,734] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:07:38,734] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[146:165]
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[167:196]
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[200:211]
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[255:274]
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[276:302]
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[306:307]
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[351:370]
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[372:428]
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[430:442]
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[444:515]
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:07:38,735] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[519:49152]
[2025-10-10 22:07:38,736] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:262144]
[2025-10-10 22:07:38,736] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:98304]
[2025-10-10 22:07:38,737] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:65536]
[2025-10-10 22:07:38,737] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:49152]
[2025-10-10 22:07:38,737] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:81920]
[2025-10-10 22:07:38,737] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:98304]
[2025-10-10 22:07:38,738] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:49152]
[2025-10-10 22:07:38,738] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:81920]
[2025-10-10 22:07:38,738] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:69004]
[2025-10-10 22:07:38,738] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:07:38,738] [DEBUG] [multipart.py:628 - callback()] Calling on_end with no data
[2025-10-10 22:13:23,715] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 22:13:33,135] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 22:13:37,956] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 22:13:39,306] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:13:39,306] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[42:61]
[2025-10-10 22:13:39,306] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[63:86]
[2025-10-10 22:13:39,306] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:13:39,306] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:13:39,306] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[90:102]
[2025-10-10 22:13:39,306] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:13:39,306] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:13:39,306] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[146:165]
[2025-10-10 22:13:39,306] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[167:196]
[2025-10-10 22:13:39,306] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:13:39,306] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:13:39,306] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[200:211]
[2025-10-10 22:13:39,306] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:13:39,307] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:13:39,307] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[255:274]
[2025-10-10 22:13:39,307] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[276:302]
[2025-10-10 22:13:39,307] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:13:39,307] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:13:39,307] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[306:307]
[2025-10-10 22:13:39,307] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:13:39,307] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:13:39,307] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[351:370]
[2025-10-10 22:13:39,307] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[372:428]
[2025-10-10 22:13:39,307] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:13:39,307] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[430:442]
[2025-10-10 22:13:39,307] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[444:515]
[2025-10-10 22:13:39,307] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:13:39,307] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:13:39,307] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[519:131072]
[2025-10-10 22:13:39,308] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:262144]
[2025-10-10 22:13:39,308] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:163840]
[2025-10-10 22:13:39,308] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:98304]
[2025-10-10 22:13:39,309] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:131072]
[2025-10-10 22:13:39,309] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:114688]
[2025-10-10 22:13:39,309] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:3468]
[2025-10-10 22:13:39,309] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:13:39,309] [DEBUG] [multipart.py:628 - callback()] Calling on_end with no data
[2025-10-10 22:14:00,129] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 22:15:31,226] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 22:16:38,697] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:16:38,697] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[42:61]
[2025-10-10 22:16:38,697] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[63:86]
[2025-10-10 22:16:38,697] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:16:38,697] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:16:38,697] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[90:102]
[2025-10-10 22:16:38,697] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:16:38,697] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:16:38,697] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[146:165]
[2025-10-10 22:16:38,697] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[167:196]
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[200:211]
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[255:274]
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[276:302]
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[306:307]
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[351:370]
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[372:428]
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[430:442]
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[444:515]
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:16:38,698] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[519:65536]
[2025-10-10 22:16:38,699] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:229376]
[2025-10-10 22:16:38,699] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:212992]
[2025-10-10 22:16:38,700] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:196608]
[2025-10-10 22:16:38,700] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:131072]
[2025-10-10 22:16:38,700] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:69004]
[2025-10-10 22:16:38,700] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:16:38,700] [DEBUG] [multipart.py:628 - callback()] Calling on_end with no data
[2025-10-10 22:16:47,386] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 22:17:15,378] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 22:17:44,042] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:17:44,042] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[42:61]
[2025-10-10 22:17:44,042] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[63:86]
[2025-10-10 22:17:44,042] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:17:44,042] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:17:44,042] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[90:102]
[2025-10-10 22:17:44,042] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:17:44,042] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[146:165]
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[167:196]
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[200:211]
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[255:274]
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[276:302]
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[306:307]
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[351:370]
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[372:428]
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[430:442]
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[444:515]
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:17:44,043] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[519:49152]
[2025-10-10 22:17:44,044] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:212992]
[2025-10-10 22:17:44,045] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:245760]
[2025-10-10 22:17:44,045] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:196608]
[2025-10-10 22:17:44,045] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:98304]
[2025-10-10 22:17:44,045] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:81920]
[2025-10-10 22:17:44,046] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:19852]
[2025-10-10 22:17:44,046] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:17:44,046] [DEBUG] [multipart.py:628 - callback()] Calling on_end with no data
[2025-10-10 22:17:45,128] [DEBUG] [_base_client.py:482 - _build_request()] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-658a6549-ce39-48bc-b5e9-b8b1f5779263', 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002837CBE62A0>, 'json_data': {'input': [[29401, 5969, 20796, 220, 16, 13, 1357, 4653, 22776, 5034, 3608, 5969, 9302, 409, 356, 2827, 268, 44190, 1560, 658, 2098, 273, 7453, 50401, 409, 924, 1560, 8968, 25, 9721, 5840, 64267, 50129, 11, 20064, 5969, 379, 2047, 99954, 97557, 13, 356, 2649, 10732, 22776, 9302, 2001, 5919, 451, 2537, 1400, 4692, 29626, 1208, 11813, 26113, 7583, 2345, 4790, 10743, 665, 41669, 781, 1744, 1794, 437, 8112, 945, 8968, 25, 5203, 653, 3739, 3312, 321, 10892, 2649, 9465, 41934, 54433, 99392, 2649, 379, 47562, 276, 7583, 76348, 13, 39776, 54526, 50914, 40192, 11403, 1080, 1964, 8968, 379, 14113, 5969, 665, 41278, 46915, 5840, 9302, 409, 1208, 47097, 11, 2655, 64, 297, 16011, 64, 13, 5034, 3608, 5969, 409, 356, 2827, 268, 44190, 35474, 1446, 84011, 1260, 11, 2389, 2205, 379, 1080, 1964, 6960, 11, 7589, 1179, 277, 658, 40021, 297, 55956, 13, 220, 17, 13, 2905, 354, 7088, 4072, 1515, 354, 7088, 409, 356, 2827, 268, 44190, 1560, 658, 45815, 3172, 10216, 8792, 409, 1208, 47097, 13, 22717, 64, 658, 3312, 31059, 10599, 9465, 90745, 8968, 2854, 3444, 379, 21075, 11, 2098, 273, 73, 4988, 90958, 11, 20847, 3739, 379, 3721, 78176, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-10-10 22:17:45,155] [DEBUG] [_base_client.py:978 - request()] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-10-10 22:17:45,156] [DEBUG] [_trace.py:47 - trace()] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
[2025-10-10 22:17:45,256] [DEBUG] [_trace.py:47 - trace()] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002837CAE6900>
[2025-10-10 22:17:45,256] [DEBUG] [_trace.py:47 - trace()] start_tls.started ssl_context=<ssl.SSLContext object at 0x000002837C6C6F00> server_hostname='api.openai.com' timeout=None
[2025-10-10 22:17:45,288] [DEBUG] [_trace.py:47 - trace()] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002837CAEF750>
[2025-10-10 22:17:45,288] [DEBUG] [_trace.py:47 - trace()] send_request_headers.started request=<Request [b'POST']>
[2025-10-10 22:17:45,288] [DEBUG] [_trace.py:47 - trace()] send_request_headers.complete
[2025-10-10 22:17:45,288] [DEBUG] [_trace.py:47 - trace()] send_request_body.started request=<Request [b'POST']>
[2025-10-10 22:17:45,288] [DEBUG] [_trace.py:47 - trace()] send_request_body.complete
[2025-10-10 22:17:45,288] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.started request=<Request [b'POST']>
[2025-10-10 22:17:46,049] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 21:17:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'user-8adwua04dismr8hiw4ywtfpm'), (b'openai-processing-ms', b'46'), (b'openai-project', b'proj_OfpXUE2umFtFZX4ebQwNNJP2'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-64df5c5b59-d8bv8'), (b'x-envoy-upstream-service-time', b'216'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999807'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'11ms'), (b'x-request-id', b'req_9e3ffc33bc8d474ebdd10c2867a9122f'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=lz0jCw0zjusnmX7J9._K.oJM5qMjhDLix3Va3GAQono-1760131056-1.0.1.1-cohnGAS.OFKej28nwGbEaa8qRHdPEJbVmUSDEpzgTyOCLxQxi7pLHxMcT70HK0peuAaBslr6kVElQYGVk2zvD8Ow9lSx10JBexJ7Bz2JiMw; path=/; expires=Fri, 10-Oct-25 21:47:36 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=FknPi1lYW8xmlcMhTV82mlWI73.0hDKxm.FywMbQKBE-1760131056114-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c925382d550324-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-10-10 22:17:46,049] [INFO] [_client.py:1025 - _send_single_request()] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-10-10 22:17:46,050] [DEBUG] [_trace.py:47 - trace()] receive_response_body.started request=<Request [b'POST']>
[2025-10-10 22:17:46,050] [DEBUG] [_trace.py:47 - trace()] receive_response_body.complete
[2025-10-10 22:17:46,050] [DEBUG] [_trace.py:47 - trace()] response_closed.started
[2025-10-10 22:17:46,050] [DEBUG] [_trace.py:47 - trace()] response_closed.complete
[2025-10-10 22:17:46,050] [DEBUG] [_base_client.py:1016 - request()] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers([('date', 'Fri, 10 Oct 2025 21:17:36 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002-v2'), ('openai-organization', 'user-8adwua04dismr8hiw4ywtfpm'), ('openai-processing-ms', '46'), ('openai-project', 'proj_OfpXUE2umFtFZX4ebQwNNJP2'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('via', 'envoy-router-64df5c5b59-d8bv8'), ('x-envoy-upstream-service-time', '216'), ('x-ratelimit-limit-requests', '3000'), ('x-ratelimit-limit-tokens', '1000000'), ('x-ratelimit-remaining-requests', '2999'), ('x-ratelimit-remaining-tokens', '999807'), ('x-ratelimit-reset-requests', '20ms'), ('x-ratelimit-reset-tokens', '11ms'), ('x-request-id', 'req_9e3ffc33bc8d474ebdd10c2867a9122f'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=lz0jCw0zjusnmX7J9._K.oJM5qMjhDLix3Va3GAQono-1760131056-1.0.1.1-cohnGAS.OFKej28nwGbEaa8qRHdPEJbVmUSDEpzgTyOCLxQxi7pLHxMcT70HK0peuAaBslr6kVElQYGVk2zvD8Ow9lSx10JBexJ7Bz2JiMw; path=/; expires=Fri, 10-Oct-25 21:47:36 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=FknPi1lYW8xmlcMhTV82mlWI73.0hDKxm.FywMbQKBE-1760131056114-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '98c925382d550324-MAD'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
[2025-10-10 22:17:46,050] [DEBUG] [_base_client.py:1024 - request()] request_id: req_9e3ffc33bc8d474ebdd10c2867a9122f
[2025-10-10 22:17:46,052] [DEBUG] [_base_client.py:482 - _build_request()] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-3cd6e5b6-b493-47df-aed4-d1c3883bf39d', 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000028362538220>, 'json_data': {'input': [[48422, 44190, 1560, 658, 45815, 3172, 10216, 8792, 409, 1208, 47097, 13, 22717, 64, 658, 3312, 31059, 10599, 9465, 90745, 8968, 2854, 3444, 379, 21075, 11, 2098, 273, 73, 4988, 90958, 11, 20847, 3739, 379, 3721, 78176, 13, 6207, 288, 70720, 25, 37409, 320, 64, 1933, 1680, 3429, 21901, 437, 64347, 437, 297, 23321, 20064, 437, 13, 20054, 28952, 320, 258, 3078, 64, 1680, 97591, 1529, 64345, 3429, 21901, 437, 32047, 44486, 297, 32940, 83581, 17038, 13, 3206, 511, 442, 49602, 25, 665, 62833, 297, 86930, 3429, 77998, 11685, 69406, 13, 4073, 437, 4495, 437, 25, 52068, 804, 66584, 409, 64404, 453, 1171, 25356, 1624, 1515, 354, 7088, 13, 4073, 277, 42698, 2537, 1400, 4692, 315, 24985, 645, 409, 1208, 7251, 49251, 13, 10641, 12635, 21901, 437, 390, 88748, 2531, 57335, 13, 4073, 437, 15465, 437, 25, 2360, 1612, 1105, 290, 277, 13080, 5868, 277, 658, 1515, 354, 7088, 13, 2360, 11857, 277, 1208, 2047, 50922, 3739, 13080, 30540, 277, 44046, 437, 409, 1794, 14720, 297, 409, 6902, 2172, 13, 2360, 70820, 2537, 1400, 4692, 36222, 13652, 13080, 73286, 42273, 39002, 288, 297, 72954, 3714, 16011, 437, 13, 4072, 1515, 354, 7088, 1560, 1208, 85190, 9302, 409, 1208, 47097, 13, 17360, 6824, 8968, 81870, 84011, 16721, 379, 2389, 1122, 4458, 13, 220, 18, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-10-10 22:17:46,053] [DEBUG] [_base_client.py:978 - request()] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-10-10 22:17:46,053] [DEBUG] [_trace.py:47 - trace()] send_request_headers.started request=<Request [b'POST']>
[2025-10-10 22:17:46,053] [DEBUG] [_trace.py:47 - trace()] send_request_headers.complete
[2025-10-10 22:17:46,054] [DEBUG] [_trace.py:47 - trace()] send_request_body.started request=<Request [b'POST']>
[2025-10-10 22:17:46,054] [DEBUG] [_trace.py:47 - trace()] send_request_body.complete
[2025-10-10 22:17:46,054] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.started request=<Request [b'POST']>
[2025-10-10 22:17:46,613] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 21:17:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'user-8adwua04dismr8hiw4ywtfpm'), (b'openai-processing-ms', b'393'), (b'openai-project', b'proj_OfpXUE2umFtFZX4ebQwNNJP2'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-64df5c5b59-9hzsb'), (b'x-envoy-upstream-service-time', b'410'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999786'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'12ms'), (b'x-request-id', b'req_9e404c0731354cd28654828331257bbc'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=FwYQ82SEN231aApRWQWwybDvYXuV7hO4U.CTWT8FA5A-1760131056-1.0.1.1-dJ3dQpppmHz8xqKiaicfzTlaFKPCLW0azxUYHfvGvm9HE_eGnUChHs1LgGoKpNoPkiPkyDsWkyxdhRqeANaixAi35cCs0S2PJGUsiP5QkHc; path=/; expires=Fri, 10-Oct-25 21:47:36 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c9253cecf20324-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-10-10 22:17:46,614] [INFO] [_client.py:1025 - _send_single_request()] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-10-10 22:17:46,614] [DEBUG] [_trace.py:47 - trace()] receive_response_body.started request=<Request [b'POST']>
[2025-10-10 22:17:46,614] [DEBUG] [_trace.py:47 - trace()] receive_response_body.complete
[2025-10-10 22:17:46,614] [DEBUG] [_trace.py:47 - trace()] response_closed.started
[2025-10-10 22:17:46,614] [DEBUG] [_trace.py:47 - trace()] response_closed.complete
[2025-10-10 22:17:46,614] [DEBUG] [_base_client.py:1016 - request()] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 10 Oct 2025 21:17:36 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'user-8adwua04dismr8hiw4ywtfpm', 'openai-processing-ms': '393', 'openai-project': 'proj_OfpXUE2umFtFZX4ebQwNNJP2', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-64df5c5b59-9hzsb', 'x-envoy-upstream-service-time': '410', 'x-ratelimit-limit-requests': '3000', 'x-ratelimit-limit-tokens': '1000000', 'x-ratelimit-remaining-requests': '2999', 'x-ratelimit-remaining-tokens': '999786', 'x-ratelimit-reset-requests': '20ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_9e404c0731354cd28654828331257bbc', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=FwYQ82SEN231aApRWQWwybDvYXuV7hO4U.CTWT8FA5A-1760131056-1.0.1.1-dJ3dQpppmHz8xqKiaicfzTlaFKPCLW0azxUYHfvGvm9HE_eGnUChHs1LgGoKpNoPkiPkyDsWkyxdhRqeANaixAi35cCs0S2PJGUsiP5QkHc; path=/; expires=Fri, 10-Oct-25 21:47:36 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98c9253cecf20324-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-10-10 22:17:46,615] [DEBUG] [_base_client.py:1024 - request()] request_id: req_9e404c0731354cd28654828331257bbc
[2025-10-10 22:17:46,615] [DEBUG] [_base_client.py:482 - _build_request()] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-94e9d565-28f0-4c2b-b918-75a5c030f1dd', 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000028362538900>, 'json_data': {'input': [[82, 1400, 4692, 36222, 13652, 13080, 73286, 42273, 39002, 288, 297, 72954, 3714, 16011, 437, 13, 4072, 1515, 354, 7088, 1560, 1208, 85190, 9302, 409, 1208, 47097, 13, 17360, 6824, 8968, 81870, 84011, 16721, 379, 2389, 1122, 4458, 13, 220, 18, 13, 16056, 49251, 409, 4349, 4692, 5034, 7251, 49251, 272, 442, 49602, 409, 356, 2827, 268, 44190, 3698, 2259, 41934, 54433, 379, 3823, 5969, 11, 64282, 4988, 3312, 31059, 10599, 9465, 1208, 39751, 4458, 1624, 4411, 2172, 379, 1208, 1446, 268, 5969, 1624, 12657, 360, 13, 4072, 68593, 1380, 53995, 76348, 17434, 11, 9721, 5840, 379, 20064, 5969, 9302, 13, 11964, 31059, 10599, 272, 442, 67649, 71494, 2172, 25, 220, 1399, 4, 90647, 297, 86930, 76321, 30183, 29421, 611, 674, 37, 20, 37, 21, 1785, 8, 220, 914, 4, 8941, 437, 12657, 2482, 30183, 21, 33, 22, 49145, 611, 674, 23, 33, 24, 49145, 8, 220, 868, 4, 4411, 2172, 12717, 30183, 18, 35, 17, 33, 1785, 8, 3429, 73467, 277, 259, 16485, 29752, 379, 51204, 11354, 264, 1208, 90164, 13, 4072, 1933, 9036, 3370, 44035, 3074, 4602, 7583, 384, 9721, 5840, 26, 2537, 8941, 437, 5819, 1263, 10308, 264, 403, 276, 1652, 1764, 379, 3312, 31059, 10599, 13, 220, 19, 13, 30973, 26113, 7583, 11095, 28952, 5034, 11813, 26113, 7583, 409, 356, 2827, 268, 44190, 2098, 8977, 4458, 924, 4443, 5969, 41934, 61194, 3074, 379, 76348, 11, 30382, 37116, 20064, 5969, 11, 9721, 5840, 379, 76509, 5808, 13, 53259, 3557, 315, 24985, 645, 25, 85557, 2298, 11651, 259, 16485, 29752, 379, 1515, 354, 7088, 13, 9589, 18536, 25, 47102, 611, 26041, 47102, 3341, 1995, 75169, 25, 18111, 324, 9265, 11, 5956, 15782, 379, 11376, 3370, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-10-10 22:17:46,616] [DEBUG] [_base_client.py:978 - request()] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-10-10 22:17:46,616] [DEBUG] [_trace.py:47 - trace()] send_request_headers.started request=<Request [b'POST']>
[2025-10-10 22:17:46,616] [DEBUG] [_trace.py:47 - trace()] send_request_headers.complete
[2025-10-10 22:17:46,616] [DEBUG] [_trace.py:47 - trace()] send_request_body.started request=<Request [b'POST']>
[2025-10-10 22:17:46,616] [DEBUG] [_trace.py:47 - trace()] send_request_body.complete
[2025-10-10 22:17:46,616] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.started request=<Request [b'POST']>
[2025-10-10 22:17:47,721] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 21:17:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'user-8adwua04dismr8hiw4ywtfpm'), (b'openai-processing-ms', b'74'), (b'openai-project', b'proj_OfpXUE2umFtFZX4ebQwNNJP2'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-5d56f9479f-2w22j'), (b'x-envoy-upstream-service-time', b'510'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999722'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'16ms'), (b'x-request-id', b'req_9c4c4e9220a8450bb7fc9c5bccc2df27'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=G8Z2BdBSxuaQusz1RD6cMqYydfEHwyTgG7rpzbW8z_g-1760131057-1.0.1.1-GToB7fEgVhSr26ncqsM.8acvugtd8KiV6qERaVfwF.lUU7lEKMOIL1yzoGu5JSRSrr_WmSBixHE6bTOukg_.ia6wMtC4X.rTNns2c0RKCqc; path=/; expires=Fri, 10-Oct-25 21:47:37 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c9254068210324-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-10-10 22:17:47,722] [INFO] [_client.py:1025 - _send_single_request()] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-10-10 22:17:47,722] [DEBUG] [_trace.py:47 - trace()] receive_response_body.started request=<Request [b'POST']>
[2025-10-10 22:17:47,722] [DEBUG] [_trace.py:47 - trace()] receive_response_body.complete
[2025-10-10 22:17:47,722] [DEBUG] [_trace.py:47 - trace()] response_closed.started
[2025-10-10 22:17:47,722] [DEBUG] [_trace.py:47 - trace()] response_closed.complete
[2025-10-10 22:17:47,722] [DEBUG] [_base_client.py:1016 - request()] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 10 Oct 2025 21:17:37 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'user-8adwua04dismr8hiw4ywtfpm', 'openai-processing-ms': '74', 'openai-project': 'proj_OfpXUE2umFtFZX4ebQwNNJP2', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-5d56f9479f-2w22j', 'x-envoy-upstream-service-time': '510', 'x-ratelimit-limit-requests': '3000', 'x-ratelimit-limit-tokens': '1000000', 'x-ratelimit-remaining-requests': '2999', 'x-ratelimit-remaining-tokens': '999722', 'x-ratelimit-reset-requests': '20ms', 'x-ratelimit-reset-tokens': '16ms', 'x-request-id': 'req_9c4c4e9220a8450bb7fc9c5bccc2df27', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=G8Z2BdBSxuaQusz1RD6cMqYydfEHwyTgG7rpzbW8z_g-1760131057-1.0.1.1-GToB7fEgVhSr26ncqsM.8acvugtd8KiV6qERaVfwF.lUU7lEKMOIL1yzoGu5JSRSrr_WmSBixHE6bTOukg_.ia6wMtC4X.rTNns2c0RKCqc; path=/; expires=Fri, 10-Oct-25 21:47:37 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98c9254068210324-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-10-10 22:17:47,723] [DEBUG] [_base_client.py:1024 - request()] request_id: req_9c4c4e9220a8450bb7fc9c5bccc2df27
[2025-10-10 22:17:47,724] [DEBUG] [_base_client.py:482 - _build_request()] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-a8077a5e-2817-4366-bb0a-ef0cbefcc1ec', 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000283625387C0>, 'json_data': {'input': [[5969, 11, 9721, 5840, 379, 76509, 5808, 13, 53259, 3557, 315, 24985, 645, 25, 85557, 2298, 11651, 259, 16485, 29752, 379, 1515, 354, 7088, 13, 9589, 18536, 25, 47102, 611, 26041, 47102, 3341, 1995, 75169, 25, 18111, 324, 9265, 11, 5956, 15782, 379, 11376, 3370, 13, 4997, 2117, 12980, 11651, 42129, 16485, 29752, 11, 10980, 5670, 87263, 85530, 379, 32118, 376, 15540, 13, 9589, 18536, 25, 25352, 611, 55738, 43900, 3341, 1995, 75169, 25, 71623, 4042, 11, 39488, 2172, 11, 52764, 13, 5783, 11651, 63613, 409, 33125, 11, 65845, 637, 2642, 437, 379, 100127, 13, 9589, 18536, 25, 29900, 611, 8828, 611, 25352, 3341, 1995, 75169, 25, 85195, 1260, 11, 4671, 12183, 379, 97557, 13, 8569, 277, 447, 7583, 11813, 83581, 3074, 25, 473, 16, 1389, 85557, 2298, 47102, 11, 220, 2166, 4235, 1227, 11051, 473, 17, 1389, 4997, 2117, 12980, 55738, 43900, 11, 220, 1591, 4235, 1927, 11051, 473, 18, 1389, 5783, 55738, 43900, 11, 220, 508, 4235, 1187, 11051, 393, 1995, 637, 64, 831, 1389, 5783, 29900, 11, 220, 845, 11051, 41097, 409, 47401, 1389, 5783, 8828, 11, 220, 1032, 4235, 975, 11051, 85557, 2298, 12979, 64, 11, 4997, 2117, 12980, 76509, 5808, 11, 5783, 44035, 3074, 13, 220, 20, 13, 11475, 26113, 7583, 379, 9589, 18536, 20796, 4072, 326, 28102, 11305, 9302, 409, 356, 2827, 268, 44190, 513, 3122, 64, 665, 1208, 12714, 416, 5969, 11, 1208, 69086, 81, 7583, 379, 1208, 20847, 3739, 13, 9853, 4706, 437, 379, 1099, 64501, 17038, 74713, 92970, 5203, 1826, 89029, 1080, 1964, 6960, 390, 658, 63816, 1624, 29928, 9302, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-10-10 22:17:47,724] [DEBUG] [_base_client.py:978 - request()] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-10-10 22:17:47,724] [DEBUG] [_trace.py:47 - trace()] send_request_headers.started request=<Request [b'POST']>
[2025-10-10 22:17:47,725] [DEBUG] [_trace.py:47 - trace()] send_request_headers.complete
[2025-10-10 22:17:47,725] [DEBUG] [_trace.py:47 - trace()] send_request_body.started request=<Request [b'POST']>
[2025-10-10 22:17:47,725] [DEBUG] [_trace.py:47 - trace()] send_request_body.complete
[2025-10-10 22:17:47,725] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.started request=<Request [b'POST']>
[2025-10-10 22:17:47,930] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 21:17:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'user-8adwua04dismr8hiw4ywtfpm'), (b'openai-processing-ms', b'43'), (b'openai-project', b'proj_OfpXUE2umFtFZX4ebQwNNJP2'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-64df5c5b59-b2kcz'), (b'x-envoy-upstream-service-time', b'62'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999740'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'15ms'), (b'x-request-id', b'req_90bdb4f1e46b4de1bac25effd6891218'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=mW4rbFXFqpwl52KhmZSyeLkUR9OT6zTabOZVkZqYz4Y-1760131057-1.0.1.1-w_1HcndVhrIah48RnaqDXms2l0mwKZTAfh__orzkqisx5YlSuZlMbyCEtm7tTifRaiUtj1b9BjGLvPDeaoM6aw3qUEuFZXdh9DFZVnP9NA4; path=/; expires=Fri, 10-Oct-25 21:47:37 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c925475c480324-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-10-10 22:17:47,930] [INFO] [_client.py:1025 - _send_single_request()] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-10-10 22:17:47,930] [DEBUG] [_trace.py:47 - trace()] receive_response_body.started request=<Request [b'POST']>
[2025-10-10 22:17:47,931] [DEBUG] [_trace.py:47 - trace()] receive_response_body.complete
[2025-10-10 22:17:47,931] [DEBUG] [_trace.py:47 - trace()] response_closed.started
[2025-10-10 22:17:47,931] [DEBUG] [_trace.py:47 - trace()] response_closed.complete
[2025-10-10 22:17:47,931] [DEBUG] [_base_client.py:1016 - request()] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 10 Oct 2025 21:17:37 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'user-8adwua04dismr8hiw4ywtfpm', 'openai-processing-ms': '43', 'openai-project': 'proj_OfpXUE2umFtFZX4ebQwNNJP2', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-64df5c5b59-b2kcz', 'x-envoy-upstream-service-time': '62', 'x-ratelimit-limit-requests': '3000', 'x-ratelimit-limit-tokens': '1000000', 'x-ratelimit-remaining-requests': '2999', 'x-ratelimit-remaining-tokens': '999740', 'x-ratelimit-reset-requests': '20ms', 'x-ratelimit-reset-tokens': '15ms', 'x-request-id': 'req_90bdb4f1e46b4de1bac25effd6891218', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=mW4rbFXFqpwl52KhmZSyeLkUR9OT6zTabOZVkZqYz4Y-1760131057-1.0.1.1-w_1HcndVhrIah48RnaqDXms2l0mwKZTAfh__orzkqisx5YlSuZlMbyCEtm7tTifRaiUtj1b9BjGLvPDeaoM6aw3qUEuFZXdh9DFZVnP9NA4; path=/; expires=Fri, 10-Oct-25 21:47:37 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98c925475c480324-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-10-10 22:17:47,931] [DEBUG] [_base_client.py:1024 - request()] request_id: req_90bdb4f1e46b4de1bac25effd6891218
[2025-10-10 22:17:47,932] [DEBUG] [_base_client.py:482 - _build_request()] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-690e9168-d214-476f-b326-cedaa698c757', 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000028362538220>, 'json_data': {'input': [[32, 513, 3122, 64, 665, 1208, 12714, 416, 5969, 11, 1208, 69086, 81, 7583, 379, 1208, 20847, 3739, 13, 9853, 4706, 437, 379, 1099, 64501, 17038, 74713, 92970, 5203, 1826, 89029, 1080, 1964, 6960, 390, 658, 63816, 1624, 29928, 9302, 13, 3341, 2540, 62527, 25, 350, 8875, 437, 14113, 288, 320, 17, 4235, 17, 13, 20, 17585, 8, 9589, 18536, 1584, 278, 11, 4671, 12183, 379, 6617, 78, 4349, 4692, 19290, 5670, 409, 1208, 7251, 49251, 8533, 28952, 426, 81492, 924, 402, 39961, 2579, 17675, 5670, 5345, 416, 12712, 25, 37770, 19826, 11, 4225, 26113, 25318, 11, 3118, 12712, 379, 47178, 65207, 13, 4158, 49022, 2145, 41852, 3429, 3190, 33469, 300, 11, 100127, 379, 45558, 645, 409, 1376, 5840, 13, 5034, 20064, 5969, 9302, 44035, 3074, 33186, 8112, 5252, 74304, 13, 220, 21, 13, 5345, 416, 12712, 409, 2947, 936, 5034, 3608, 5969, 9302, 409, 356, 2827, 268, 44190, 513, 39732, 2629, 264, 47009, 779, 45808, 11, 26976, 34229, 8862, 6824, 8968, 379, 2531, 57335, 13, 53858, 3342, 2353, 25, 12051, 437, 2655, 437, 379, 8533, 64545, 25, 3289, 84578, 5670, 11, 61777, 379, 70383, 14113, 68, 13, 3816, 288, 65207, 25, 59472, 11, 7493, 11, 79600, 11, 586, 12712, 13, 29508, 822, 3566, 25, 1080, 1964, 8968, 9465, 1400, 4692, 11, 11813, 26113, 7583, 384, 4706, 26113, 7583, 13, 32743, 8023, 7583, 25, 6136, 34344, 3429, 6155, 14357, 11, 6179, 288, 11, 3118, 12712, 379, 12460, 15769, 300, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-10-10 22:17:47,933] [DEBUG] [_base_client.py:978 - request()] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-10-10 22:17:47,933] [DEBUG] [_trace.py:47 - trace()] send_request_headers.started request=<Request [b'POST']>
[2025-10-10 22:17:47,933] [DEBUG] [_trace.py:47 - trace()] send_request_headers.complete
[2025-10-10 22:17:47,933] [DEBUG] [_trace.py:47 - trace()] send_request_body.started request=<Request [b'POST']>
[2025-10-10 22:17:47,933] [DEBUG] [_trace.py:47 - trace()] send_request_body.complete
[2025-10-10 22:17:47,933] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.started request=<Request [b'POST']>
[2025-10-10 22:17:48,142] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 21:17:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'user-8adwua04dismr8hiw4ywtfpm'), (b'openai-processing-ms', b'45'), (b'openai-project', b'proj_OfpXUE2umFtFZX4ebQwNNJP2'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-canary-79ddcb7cb7-rkgr5'), (b'x-envoy-upstream-service-time', b'66'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999760'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'14ms'), (b'x-request-id', b'req_5a7c0574926244c5ac0a61965f21a78d'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=92JW.GnqySFPAm2sN_bpdeCSBdJYrA_Fm4ceNCUx5UU-1760131058-1.0.1.1-XcIKvbNaksosvNYGkAiLEXXdXr4NR_UatskJHb2wwdlLps5zYNV91Bz3PcAz5AT2IU2aVyq06C0rVU6ijteXcOX_Odtv0QVAYU5Mv4HMqHk; path=/; expires=Fri, 10-Oct-25 21:47:38 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c92548afc90324-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-10-10 22:17:48,143] [INFO] [_client.py:1025 - _send_single_request()] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-10-10 22:17:48,143] [DEBUG] [_trace.py:47 - trace()] receive_response_body.started request=<Request [b'POST']>
[2025-10-10 22:17:48,143] [DEBUG] [_trace.py:47 - trace()] receive_response_body.complete
[2025-10-10 22:17:48,143] [DEBUG] [_trace.py:47 - trace()] response_closed.started
[2025-10-10 22:17:48,143] [DEBUG] [_trace.py:47 - trace()] response_closed.complete
[2025-10-10 22:17:48,144] [DEBUG] [_base_client.py:1016 - request()] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 10 Oct 2025 21:17:38 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'user-8adwua04dismr8hiw4ywtfpm', 'openai-processing-ms': '45', 'openai-project': 'proj_OfpXUE2umFtFZX4ebQwNNJP2', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-canary-79ddcb7cb7-rkgr5', 'x-envoy-upstream-service-time': '66', 'x-ratelimit-limit-requests': '3000', 'x-ratelimit-limit-tokens': '1000000', 'x-ratelimit-remaining-requests': '2999', 'x-ratelimit-remaining-tokens': '999760', 'x-ratelimit-reset-requests': '20ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_5a7c0574926244c5ac0a61965f21a78d', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=92JW.GnqySFPAm2sN_bpdeCSBdJYrA_Fm4ceNCUx5UU-1760131058-1.0.1.1-XcIKvbNaksosvNYGkAiLEXXdXr4NR_UatskJHb2wwdlLps5zYNV91Bz3PcAz5AT2IU2aVyq06C0rVU6ijteXcOX_Odtv0QVAYU5Mv4HMqHk; path=/; expires=Fri, 10-Oct-25 21:47:38 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98c92548afc90324-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-10-10 22:17:48,144] [DEBUG] [_base_client.py:1024 - request()] request_id: req_5a7c0574926244c5ac0a61965f21a78d
[2025-10-10 22:17:48,144] [DEBUG] [_base_client.py:482 - _build_request()] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-166d5f2d-eef5-49b3-a381-e496da98d876', 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002837CBD6DE0>, 'json_data': {'input': [[65, 416, 12712, 13, 29508, 822, 3566, 25, 1080, 1964, 8968, 9465, 1400, 4692, 11, 11813, 26113, 7583, 384, 4706, 26113, 7583, 13, 32743, 8023, 7583, 25, 6136, 34344, 3429, 6155, 14357, 11, 6179, 288, 11, 3118, 12712, 379, 12460, 15769, 300, 13, 356, 2649, 75427, 35474, 92970, 1208, 2047, 50922, 3739, 87818, 86200, 409, 1933, 11, 11813, 26113, 7583, 379, 66584, 665, 90647, 13, 220, 22, 13, 350, 10358, 379, 9589, 18536, 20796, 356, 2827, 268, 44190, 44035, 3074, 23553, 1208, 41934, 54433, 11, 20003, 390, 5203, 85190, 2854, 3444, 13, 17360, 8941, 78, 9302, 35474, 2098, 273, 19571, 20064, 5969, 11, 20847, 3739, 379, 5203, 9721, 5840, 47562, 3444, 453, 16787, 13, 11165, 54988, 1709, 7583, 25, 55947, 5840, 64267, 50129, 15323, 1122, 4458, 9302, 8626, 288, 4001, 17434, 85195, 1260, 42770, 71355, 390, 2047, 99954, 20319, 266, 17528, 49841, 11, 1922, 346, 96616, 13, 4072, 84908, 912, 13839, 1654, 6347, 2001, 48126, 10743, 1208, 5906, 3739, 409, 356, 2827, 268, 44190, 665, 5203, 54413, 9302, 1080, 1964, 6960, 379, 2389, 2205, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-10-10 22:17:48,145] [DEBUG] [_base_client.py:978 - request()] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-10-10 22:17:48,145] [DEBUG] [_trace.py:47 - trace()] send_request_headers.started request=<Request [b'POST']>
[2025-10-10 22:17:48,145] [DEBUG] [_trace.py:47 - trace()] send_request_headers.complete
[2025-10-10 22:17:48,145] [DEBUG] [_trace.py:47 - trace()] send_request_body.started request=<Request [b'POST']>
[2025-10-10 22:17:48,145] [DEBUG] [_trace.py:47 - trace()] send_request_body.complete
[2025-10-10 22:17:48,145] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.started request=<Request [b'POST']>
[2025-10-10 22:17:49,171] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 21:17:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'user-8adwua04dismr8hiw4ywtfpm'), (b'openai-processing-ms', b'64'), (b'openai-project', b'proj_OfpXUE2umFtFZX4ebQwNNJP2'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-864fbf466c-4m84j'), (b'x-envoy-upstream-service-time', b'299'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999825'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_88dff78407f940b3bcee8fcc9e49edf4'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=hXwYRn9i.T.Go.2hatbUqq2r3VWGcm_lPVzP920HKCk-1760131059-1.0.1.1-uDvtAhVEydiuBh8YIJePMxccvvhelIvLFy4NJUe35BqH5UgkeOL8RX1ENYANzZ74BXN79ww7jibws87ukCkQwy_MO8CoHCPeUnUkpaGrq9c; path=/; expires=Fri, 10-Oct-25 21:47:39 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c92549fbd00324-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-10-10 22:17:49,171] [INFO] [_client.py:1025 - _send_single_request()] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-10-10 22:17:49,171] [DEBUG] [_trace.py:47 - trace()] receive_response_body.started request=<Request [b'POST']>
[2025-10-10 22:17:49,172] [DEBUG] [_trace.py:47 - trace()] receive_response_body.complete
[2025-10-10 22:17:49,172] [DEBUG] [_trace.py:47 - trace()] response_closed.started
[2025-10-10 22:17:49,172] [DEBUG] [_trace.py:47 - trace()] response_closed.complete
[2025-10-10 22:17:49,172] [DEBUG] [_base_client.py:1016 - request()] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 10 Oct 2025 21:17:39 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'user-8adwua04dismr8hiw4ywtfpm', 'openai-processing-ms': '64', 'openai-project': 'proj_OfpXUE2umFtFZX4ebQwNNJP2', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-864fbf466c-4m84j', 'x-envoy-upstream-service-time': '299', 'x-ratelimit-limit-requests': '3000', 'x-ratelimit-limit-tokens': '1000000', 'x-ratelimit-remaining-requests': '2999', 'x-ratelimit-remaining-tokens': '999825', 'x-ratelimit-reset-requests': '20ms', 'x-ratelimit-reset-tokens': '10ms', 'x-request-id': 'req_88dff78407f940b3bcee8fcc9e49edf4', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=hXwYRn9i.T.Go.2hatbUqq2r3VWGcm_lPVzP920HKCk-1760131059-1.0.1.1-uDvtAhVEydiuBh8YIJePMxccvvhelIvLFy4NJUe35BqH5UgkeOL8RX1ENYANzZ74BXN79ww7jibws87ukCkQwy_MO8CoHCPeUnUkpaGrq9c; path=/; expires=Fri, 10-Oct-25 21:47:39 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98c92549fbd00324-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-10-10 22:17:49,172] [DEBUG] [_base_client.py:1024 - request()] request_id: req_88dff78407f940b3bcee8fcc9e49edf4
[2025-10-10 22:18:36,282] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:18:36,282] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[42:61]
[2025-10-10 22:18:36,282] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[63:86]
[2025-10-10 22:18:36,282] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:18:36,282] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:18:36,282] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[90:102]
[2025-10-10 22:18:36,282] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:18:36,282] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:18:36,282] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[146:165]
[2025-10-10 22:18:36,282] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[167:196]
[2025-10-10 22:18:36,282] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:18:36,282] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:18:36,282] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[200:211]
[2025-10-10 22:18:36,282] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:18:36,282] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:18:36,282] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[255:274]
[2025-10-10 22:18:36,283] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[276:302]
[2025-10-10 22:18:36,283] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:18:36,283] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:18:36,283] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[306:307]
[2025-10-10 22:18:36,283] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:18:36,283] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:18:36,283] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[351:370]
[2025-10-10 22:18:36,283] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[372:428]
[2025-10-10 22:18:36,283] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:18:36,283] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[430:442]
[2025-10-10 22:18:36,283] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[444:515]
[2025-10-10 22:18:36,283] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:18:36,283] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:18:36,283] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[519:196608]
[2025-10-10 22:18:36,283] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:245760]
[2025-10-10 22:18:36,284] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:49152]
[2025-10-10 22:18:36,284] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:16384]
[2025-10-10 22:18:36,284] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:32768]
[2025-10-10 22:18:36,284] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:65536]
[2025-10-10 22:18:36,284] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:65536]
[2025-10-10 22:18:36,284] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:65536]
[2025-10-10 22:18:36,284] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:32768]
[2025-10-10 22:18:36,284] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:32768]
[2025-10-10 22:18:36,284] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:32768]
[2025-10-10 22:18:36,285] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:69004]
[2025-10-10 22:18:36,285] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:18:36,285] [DEBUG] [multipart.py:628 - callback()] Calling on_end with no data
[2025-10-10 22:18:36,882] [DEBUG] [_base_client.py:482 - _build_request()] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-d17a4390-d4f6-49d6-8f2b-014c0c53e922', 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000283625385E0>, 'json_data': {'input': [[29401, 5969, 20796, 220, 16, 13, 1357, 4653, 22776, 5034, 3608, 5969, 9302, 409, 356, 2827, 268, 44190, 1560, 658, 2098, 273, 7453, 50401, 409, 924, 1560, 8968, 25, 9721, 5840, 64267, 50129, 11, 20064, 5969, 379, 2047, 99954, 97557, 13, 356, 2649, 10732, 22776, 9302, 2001, 5919, 451, 2537, 1400, 4692, 29626, 1208, 11813, 26113, 7583, 2345, 4790, 10743, 665, 41669, 781, 1744, 1794, 437, 8112, 945, 8968, 25, 5203, 653, 3739, 3312, 321, 10892, 2649, 9465, 41934, 54433, 99392, 2649, 379, 47562, 276, 7583, 76348, 13, 39776, 54526, 50914, 40192, 11403, 1080, 1964, 8968, 379, 14113, 5969, 665, 41278, 46915, 5840, 9302, 409, 1208, 47097, 11, 2655, 64, 297, 16011, 64, 13, 5034, 3608, 5969, 409, 356, 2827, 268, 44190, 35474, 1446, 84011, 1260, 11, 2389, 2205, 379, 1080, 1964, 6960, 11, 7589, 1179, 277, 658, 40021, 297, 55956, 13, 220, 17, 13, 2905, 354, 7088, 4072, 1515, 354, 7088, 409, 356, 2827, 268, 44190, 1560, 658, 45815, 3172, 10216, 8792, 409, 1208, 47097, 13, 22717, 64, 658, 3312, 31059, 10599, 9465, 90745, 8968, 2854, 3444, 379, 21075, 11, 2098, 273, 73, 4988, 90958, 11, 20847, 3739, 379, 3721, 78176, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-10-10 22:18:36,882] [DEBUG] [_base_client.py:978 - request()] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-10-10 22:18:36,882] [DEBUG] [_trace.py:47 - trace()] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
[2025-10-10 22:18:37,096] [DEBUG] [_trace.py:47 - trace()] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002837DDDD950>
[2025-10-10 22:18:37,096] [DEBUG] [_trace.py:47 - trace()] start_tls.started ssl_context=<ssl.SSLContext object at 0x000002837CB9E210> server_hostname='api.openai.com' timeout=None
[2025-10-10 22:18:37,127] [DEBUG] [_trace.py:47 - trace()] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002837DDAE780>
[2025-10-10 22:18:37,127] [DEBUG] [_trace.py:47 - trace()] send_request_headers.started request=<Request [b'POST']>
[2025-10-10 22:18:37,127] [DEBUG] [_trace.py:47 - trace()] send_request_headers.complete
[2025-10-10 22:18:37,127] [DEBUG] [_trace.py:47 - trace()] send_request_body.started request=<Request [b'POST']>
[2025-10-10 22:18:37,127] [DEBUG] [_trace.py:47 - trace()] send_request_body.complete
[2025-10-10 22:18:37,127] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.started request=<Request [b'POST']>
[2025-10-10 22:18:37,339] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 21:18:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'user-8adwua04dismr8hiw4ywtfpm'), (b'openai-processing-ms', b'41'), (b'openai-project', b'proj_OfpXUE2umFtFZX4ebQwNNJP2'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-864fbf466c-7qrhf'), (b'x-envoy-upstream-service-time', b'65'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999807'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'11ms'), (b'x-request-id', b'req_5895bcce94f5406f88e016787b1faafb'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=2AdQzocOob._8dHZlggkwOXN2FdVTfqT5zW_0STM5j4-1760131107-1.0.1.1-6Ab3LMDfUWGUSFtk.Ia8nOxT1zWk07osuVDfE0Xtrp3WALurXkDR0qbWXaglEWsiM6SBOFIf3cUPo2ur7WVc._97gZhXMpKAEorTih3RGVc; path=/; expires=Fri, 10-Oct-25 21:48:27 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=bSqdYO4iFJL23ywpj23dm8w58wiUb9f684vmeyelG6A-1760131107406-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c9267c2f34035e-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-10-10 22:18:37,339] [INFO] [_client.py:1025 - _send_single_request()] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-10-10 22:18:37,339] [DEBUG] [_trace.py:47 - trace()] receive_response_body.started request=<Request [b'POST']>
[2025-10-10 22:18:37,340] [DEBUG] [_trace.py:47 - trace()] receive_response_body.complete
[2025-10-10 22:18:37,340] [DEBUG] [_trace.py:47 - trace()] response_closed.started
[2025-10-10 22:18:37,340] [DEBUG] [_trace.py:47 - trace()] response_closed.complete
[2025-10-10 22:18:37,340] [DEBUG] [_base_client.py:1016 - request()] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers([('date', 'Fri, 10 Oct 2025 21:18:27 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002-v2'), ('openai-organization', 'user-8adwua04dismr8hiw4ywtfpm'), ('openai-processing-ms', '41'), ('openai-project', 'proj_OfpXUE2umFtFZX4ebQwNNJP2'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('via', 'envoy-router-864fbf466c-7qrhf'), ('x-envoy-upstream-service-time', '65'), ('x-ratelimit-limit-requests', '3000'), ('x-ratelimit-limit-tokens', '1000000'), ('x-ratelimit-remaining-requests', '2999'), ('x-ratelimit-remaining-tokens', '999807'), ('x-ratelimit-reset-requests', '20ms'), ('x-ratelimit-reset-tokens', '11ms'), ('x-request-id', 'req_5895bcce94f5406f88e016787b1faafb'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=2AdQzocOob._8dHZlggkwOXN2FdVTfqT5zW_0STM5j4-1760131107-1.0.1.1-6Ab3LMDfUWGUSFtk.Ia8nOxT1zWk07osuVDfE0Xtrp3WALurXkDR0qbWXaglEWsiM6SBOFIf3cUPo2ur7WVc._97gZhXMpKAEorTih3RGVc; path=/; expires=Fri, 10-Oct-25 21:48:27 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=bSqdYO4iFJL23ywpj23dm8w58wiUb9f684vmeyelG6A-1760131107406-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '98c9267c2f34035e-MAD'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
[2025-10-10 22:18:37,340] [DEBUG] [_base_client.py:1024 - request()] request_id: req_5895bcce94f5406f88e016787b1faafb
[2025-10-10 22:18:37,341] [DEBUG] [_base_client.py:482 - _build_request()] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-3891d8d0-fc28-4438-a246-3981cccd51f0', 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000283625384A0>, 'json_data': {'input': [[48422, 44190, 1560, 658, 45815, 3172, 10216, 8792, 409, 1208, 47097, 13, 22717, 64, 658, 3312, 31059, 10599, 9465, 90745, 8968, 2854, 3444, 379, 21075, 11, 2098, 273, 73, 4988, 90958, 11, 20847, 3739, 379, 3721, 78176, 13, 6207, 288, 70720, 25, 37409, 320, 64, 1933, 1680, 3429, 21901, 437, 64347, 437, 297, 23321, 20064, 437, 13, 20054, 28952, 320, 258, 3078, 64, 1680, 97591, 1529, 64345, 3429, 21901, 437, 32047, 44486, 297, 32940, 83581, 17038, 13, 3206, 511, 442, 49602, 25, 665, 62833, 297, 86930, 3429, 77998, 11685, 69406, 13, 4073, 437, 4495, 437, 25, 52068, 804, 66584, 409, 64404, 453, 1171, 25356, 1624, 1515, 354, 7088, 13, 4073, 277, 42698, 2537, 1400, 4692, 315, 24985, 645, 409, 1208, 7251, 49251, 13, 10641, 12635, 21901, 437, 390, 88748, 2531, 57335, 13, 4073, 437, 15465, 437, 25, 2360, 1612, 1105, 290, 277, 13080, 5868, 277, 658, 1515, 354, 7088, 13, 2360, 11857, 277, 1208, 2047, 50922, 3739, 13080, 30540, 277, 44046, 437, 409, 1794, 14720, 297, 409, 6902, 2172, 13, 2360, 70820, 2537, 1400, 4692, 36222, 13652, 13080, 73286, 42273, 39002, 288, 297, 72954, 3714, 16011, 437, 13, 4072, 1515, 354, 7088, 1560, 1208, 85190, 9302, 409, 1208, 47097, 13, 17360, 6824, 8968, 81870, 84011, 16721, 379, 2389, 1122, 4458, 13, 220, 18, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-10-10 22:18:37,342] [DEBUG] [_base_client.py:978 - request()] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-10-10 22:18:37,342] [DEBUG] [_trace.py:47 - trace()] send_request_headers.started request=<Request [b'POST']>
[2025-10-10 22:18:37,342] [DEBUG] [_trace.py:47 - trace()] send_request_headers.complete
[2025-10-10 22:18:37,342] [DEBUG] [_trace.py:47 - trace()] send_request_body.started request=<Request [b'POST']>
[2025-10-10 22:18:37,342] [DEBUG] [_trace.py:47 - trace()] send_request_body.complete
[2025-10-10 22:18:37,342] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.started request=<Request [b'POST']>
[2025-10-10 22:18:37,699] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 21:18:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'user-8adwua04dismr8hiw4ywtfpm'), (b'openai-processing-ms', b'187'), (b'openai-project', b'proj_OfpXUE2umFtFZX4ebQwNNJP2'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-864fbf466c-sb8zm'), (b'x-envoy-upstream-service-time', b'223'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999786'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'12ms'), (b'x-request-id', b'req_63eb2b2bda2d441a97cfbd649be3711b'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=Wrn_Lxs5BTfzVr5IgWujLbA7uXTaIPgz9Os.y7bvtL4-1760131107-1.0.1.1-F_JHIUfCqsDIIozPZSqke7m_.aALB1vVQr.XFAoZb6zrPzLSjrO6a5sdVa32ZlTdZunnr5jgUdyZk.lK87BLzEaQCzwgSkgBwMJw_UuQdso; path=/; expires=Fri, 10-Oct-25 21:48:27 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c9267d7adb035e-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-10-10 22:18:37,699] [INFO] [_client.py:1025 - _send_single_request()] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-10-10 22:18:37,699] [DEBUG] [_trace.py:47 - trace()] receive_response_body.started request=<Request [b'POST']>
[2025-10-10 22:18:37,700] [DEBUG] [_trace.py:47 - trace()] receive_response_body.complete
[2025-10-10 22:18:37,700] [DEBUG] [_trace.py:47 - trace()] response_closed.started
[2025-10-10 22:18:37,700] [DEBUG] [_trace.py:47 - trace()] response_closed.complete
[2025-10-10 22:18:37,700] [DEBUG] [_base_client.py:1016 - request()] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 10 Oct 2025 21:18:27 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'user-8adwua04dismr8hiw4ywtfpm', 'openai-processing-ms': '187', 'openai-project': 'proj_OfpXUE2umFtFZX4ebQwNNJP2', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-864fbf466c-sb8zm', 'x-envoy-upstream-service-time': '223', 'x-ratelimit-limit-requests': '3000', 'x-ratelimit-limit-tokens': '1000000', 'x-ratelimit-remaining-requests': '2999', 'x-ratelimit-remaining-tokens': '999786', 'x-ratelimit-reset-requests': '20ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_63eb2b2bda2d441a97cfbd649be3711b', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=Wrn_Lxs5BTfzVr5IgWujLbA7uXTaIPgz9Os.y7bvtL4-1760131107-1.0.1.1-F_JHIUfCqsDIIozPZSqke7m_.aALB1vVQr.XFAoZb6zrPzLSjrO6a5sdVa32ZlTdZunnr5jgUdyZk.lK87BLzEaQCzwgSkgBwMJw_UuQdso; path=/; expires=Fri, 10-Oct-25 21:48:27 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98c9267d7adb035e-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-10-10 22:18:37,700] [DEBUG] [_base_client.py:1024 - request()] request_id: req_63eb2b2bda2d441a97cfbd649be3711b
[2025-10-10 22:18:37,701] [DEBUG] [_base_client.py:482 - _build_request()] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-1b2c44e7-6021-449c-86ab-35d4d974f449', 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000028362538A40>, 'json_data': {'input': [[82, 1400, 4692, 36222, 13652, 13080, 73286, 42273, 39002, 288, 297, 72954, 3714, 16011, 437, 13, 4072, 1515, 354, 7088, 1560, 1208, 85190, 9302, 409, 1208, 47097, 13, 17360, 6824, 8968, 81870, 84011, 16721, 379, 2389, 1122, 4458, 13, 220, 18, 13, 16056, 49251, 409, 4349, 4692, 5034, 7251, 49251, 272, 442, 49602, 409, 356, 2827, 268, 44190, 3698, 2259, 41934, 54433, 379, 3823, 5969, 11, 64282, 4988, 3312, 31059, 10599, 9465, 1208, 39751, 4458, 1624, 4411, 2172, 379, 1208, 1446, 268, 5969, 1624, 12657, 360, 13, 4072, 68593, 1380, 53995, 76348, 17434, 11, 9721, 5840, 379, 20064, 5969, 9302, 13, 11964, 31059, 10599, 272, 442, 67649, 71494, 2172, 25, 220, 1399, 4, 90647, 297, 86930, 76321, 30183, 29421, 611, 674, 37, 20, 37, 21, 1785, 8, 220, 914, 4, 8941, 437, 12657, 2482, 30183, 21, 33, 22, 49145, 611, 674, 23, 33, 24, 49145, 8, 220, 868, 4, 4411, 2172, 12717, 30183, 18, 35, 17, 33, 1785, 8, 3429, 73467, 277, 259, 16485, 29752, 379, 51204, 11354, 264, 1208, 90164, 13, 4072, 1933, 9036, 3370, 44035, 3074, 4602, 7583, 384, 9721, 5840, 26, 2537, 8941, 437, 5819, 1263, 10308, 264, 403, 276, 1652, 1764, 379, 3312, 31059, 10599, 13, 220, 19, 13, 30973, 26113, 7583, 11095, 28952, 5034, 11813, 26113, 7583, 409, 356, 2827, 268, 44190, 2098, 8977, 4458, 924, 4443, 5969, 41934, 61194, 3074, 379, 76348, 11, 30382, 37116, 20064, 5969, 11, 9721, 5840, 379, 76509, 5808, 13, 53259, 3557, 315, 24985, 645, 25, 85557, 2298, 11651, 259, 16485, 29752, 379, 1515, 354, 7088, 13, 9589, 18536, 25, 47102, 611, 26041, 47102, 3341, 1995, 75169, 25, 18111, 324, 9265, 11, 5956, 15782, 379, 11376, 3370, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-10-10 22:18:37,702] [DEBUG] [_base_client.py:978 - request()] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-10-10 22:18:37,702] [DEBUG] [_trace.py:47 - trace()] send_request_headers.started request=<Request [b'POST']>
[2025-10-10 22:18:37,702] [DEBUG] [_trace.py:47 - trace()] send_request_headers.complete
[2025-10-10 22:18:37,702] [DEBUG] [_trace.py:47 - trace()] send_request_body.started request=<Request [b'POST']>
[2025-10-10 22:18:37,702] [DEBUG] [_trace.py:47 - trace()] send_request_body.complete
[2025-10-10 22:18:37,702] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.started request=<Request [b'POST']>
[2025-10-10 22:18:38,420] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 21:18:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'user-8adwua04dismr8hiw4ywtfpm'), (b'openai-processing-ms', b'48'), (b'openai-project', b'proj_OfpXUE2umFtFZX4ebQwNNJP2'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-59b4744449-ggxtj'), (b'x-envoy-upstream-service-time', b'217'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999722'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'16ms'), (b'x-request-id', b'req_1e3940dd56614dd69a75af206296ac89'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=9wGMr.AtEsGEjlID86trDuRI7s_i9xoX9P.1LVOx3oM-1760131108-1.0.1.1-nIk2JJZ1jwBtu2MKj7DaZ5v_YUjzQOgWCg8_.2I3u7cmZZyepwmg.VvSvbNGfS3KSIgGi_mZDQ0XsFbGo5Ke2fcYyUbv0d_DzlT4Xy0DmpA; path=/; expires=Fri, 10-Oct-25 21:48:28 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c9267fb8bf035e-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-10-10 22:18:38,420] [INFO] [_client.py:1025 - _send_single_request()] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-10-10 22:18:38,420] [DEBUG] [_trace.py:47 - trace()] receive_response_body.started request=<Request [b'POST']>
[2025-10-10 22:18:38,421] [DEBUG] [_trace.py:47 - trace()] receive_response_body.complete
[2025-10-10 22:18:38,421] [DEBUG] [_trace.py:47 - trace()] response_closed.started
[2025-10-10 22:18:38,421] [DEBUG] [_trace.py:47 - trace()] response_closed.complete
[2025-10-10 22:18:38,421] [DEBUG] [_base_client.py:1016 - request()] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 10 Oct 2025 21:18:28 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'user-8adwua04dismr8hiw4ywtfpm', 'openai-processing-ms': '48', 'openai-project': 'proj_OfpXUE2umFtFZX4ebQwNNJP2', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-59b4744449-ggxtj', 'x-envoy-upstream-service-time': '217', 'x-ratelimit-limit-requests': '3000', 'x-ratelimit-limit-tokens': '1000000', 'x-ratelimit-remaining-requests': '2999', 'x-ratelimit-remaining-tokens': '999722', 'x-ratelimit-reset-requests': '20ms', 'x-ratelimit-reset-tokens': '16ms', 'x-request-id': 'req_1e3940dd56614dd69a75af206296ac89', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=9wGMr.AtEsGEjlID86trDuRI7s_i9xoX9P.1LVOx3oM-1760131108-1.0.1.1-nIk2JJZ1jwBtu2MKj7DaZ5v_YUjzQOgWCg8_.2I3u7cmZZyepwmg.VvSvbNGfS3KSIgGi_mZDQ0XsFbGo5Ke2fcYyUbv0d_DzlT4Xy0DmpA; path=/; expires=Fri, 10-Oct-25 21:48:28 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98c9267fb8bf035e-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-10-10 22:18:38,421] [DEBUG] [_base_client.py:1024 - request()] request_id: req_1e3940dd56614dd69a75af206296ac89
[2025-10-10 22:18:38,422] [DEBUG] [_base_client.py:482 - _build_request()] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-df43b4ea-07a6-4c4a-a842-3e85448a5a31', 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000283625385E0>, 'json_data': {'input': [[5969, 11, 9721, 5840, 379, 76509, 5808, 13, 53259, 3557, 315, 24985, 645, 25, 85557, 2298, 11651, 259, 16485, 29752, 379, 1515, 354, 7088, 13, 9589, 18536, 25, 47102, 611, 26041, 47102, 3341, 1995, 75169, 25, 18111, 324, 9265, 11, 5956, 15782, 379, 11376, 3370, 13, 4997, 2117, 12980, 11651, 42129, 16485, 29752, 11, 10980, 5670, 87263, 85530, 379, 32118, 376, 15540, 13, 9589, 18536, 25, 25352, 611, 55738, 43900, 3341, 1995, 75169, 25, 71623, 4042, 11, 39488, 2172, 11, 52764, 13, 5783, 11651, 63613, 409, 33125, 11, 65845, 637, 2642, 437, 379, 100127, 13, 9589, 18536, 25, 29900, 611, 8828, 611, 25352, 3341, 1995, 75169, 25, 85195, 1260, 11, 4671, 12183, 379, 97557, 13, 8569, 277, 447, 7583, 11813, 83581, 3074, 25, 473, 16, 1389, 85557, 2298, 47102, 11, 220, 2166, 4235, 1227, 11051, 473, 17, 1389, 4997, 2117, 12980, 55738, 43900, 11, 220, 1591, 4235, 1927, 11051, 473, 18, 1389, 5783, 55738, 43900, 11, 220, 508, 4235, 1187, 11051, 393, 1995, 637, 64, 831, 1389, 5783, 29900, 11, 220, 845, 11051, 41097, 409, 47401, 1389, 5783, 8828, 11, 220, 1032, 4235, 975, 11051, 85557, 2298, 12979, 64, 11, 4997, 2117, 12980, 76509, 5808, 11, 5783, 44035, 3074, 13, 220, 20, 13, 11475, 26113, 7583, 379, 9589, 18536, 20796, 4072, 326, 28102, 11305, 9302, 409, 356, 2827, 268, 44190, 513, 3122, 64, 665, 1208, 12714, 416, 5969, 11, 1208, 69086, 81, 7583, 379, 1208, 20847, 3739, 13, 9853, 4706, 437, 379, 1099, 64501, 17038, 74713, 92970, 5203, 1826, 89029, 1080, 1964, 6960, 390, 658, 63816, 1624, 29928, 9302, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-10-10 22:18:38,422] [DEBUG] [_base_client.py:978 - request()] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-10-10 22:18:38,423] [DEBUG] [_trace.py:47 - trace()] send_request_headers.started request=<Request [b'POST']>
[2025-10-10 22:18:38,423] [DEBUG] [_trace.py:47 - trace()] send_request_headers.complete
[2025-10-10 22:18:38,423] [DEBUG] [_trace.py:47 - trace()] send_request_body.started request=<Request [b'POST']>
[2025-10-10 22:18:38,423] [DEBUG] [_trace.py:47 - trace()] send_request_body.complete
[2025-10-10 22:18:38,423] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.started request=<Request [b'POST']>
[2025-10-10 22:18:38,622] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 21:18:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'user-8adwua04dismr8hiw4ywtfpm'), (b'openai-processing-ms', b'38'), (b'openai-project', b'proj_OfpXUE2umFtFZX4ebQwNNJP2'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-64df5c5b59-dxrpk'), (b'x-envoy-upstream-service-time', b'60'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999740'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'15ms'), (b'x-request-id', b'req_9b5dc2991972426dbb64add0352a2a4c'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=BdoP7arnNhVhLCkwq4vzDXzKinyysxS8AXO9gw6JT7M-1760131108-1.0.1.1-N.9YXi_XiMiZ72aM51PGJBXtVQjyVmw4kUa9qflFzHtoMSiMxx1oOgAnFS7qCl0lZDQpn2q4ib1spySfbs9H4W8ehQNC9HW4g.AMXSNmbhM; path=/; expires=Fri, 10-Oct-25 21:48:28 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c926843d5f035e-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-10-10 22:18:38,623] [INFO] [_client.py:1025 - _send_single_request()] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-10-10 22:18:38,623] [DEBUG] [_trace.py:47 - trace()] receive_response_body.started request=<Request [b'POST']>
[2025-10-10 22:18:38,623] [DEBUG] [_trace.py:47 - trace()] receive_response_body.complete
[2025-10-10 22:18:38,623] [DEBUG] [_trace.py:47 - trace()] response_closed.started
[2025-10-10 22:18:38,623] [DEBUG] [_trace.py:47 - trace()] response_closed.complete
[2025-10-10 22:18:38,623] [DEBUG] [_base_client.py:1016 - request()] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 10 Oct 2025 21:18:28 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'user-8adwua04dismr8hiw4ywtfpm', 'openai-processing-ms': '38', 'openai-project': 'proj_OfpXUE2umFtFZX4ebQwNNJP2', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-64df5c5b59-dxrpk', 'x-envoy-upstream-service-time': '60', 'x-ratelimit-limit-requests': '3000', 'x-ratelimit-limit-tokens': '1000000', 'x-ratelimit-remaining-requests': '2999', 'x-ratelimit-remaining-tokens': '999740', 'x-ratelimit-reset-requests': '20ms', 'x-ratelimit-reset-tokens': '15ms', 'x-request-id': 'req_9b5dc2991972426dbb64add0352a2a4c', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=BdoP7arnNhVhLCkwq4vzDXzKinyysxS8AXO9gw6JT7M-1760131108-1.0.1.1-N.9YXi_XiMiZ72aM51PGJBXtVQjyVmw4kUa9qflFzHtoMSiMxx1oOgAnFS7qCl0lZDQpn2q4ib1spySfbs9H4W8ehQNC9HW4g.AMXSNmbhM; path=/; expires=Fri, 10-Oct-25 21:48:28 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98c926843d5f035e-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-10-10 22:18:38,623] [DEBUG] [_base_client.py:1024 - request()] request_id: req_9b5dc2991972426dbb64add0352a2a4c
[2025-10-10 22:18:38,624] [DEBUG] [_base_client.py:482 - _build_request()] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-f635e4e8-f894-41ef-802f-40501bf8db1c', 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000028362538A40>, 'json_data': {'input': [[32, 513, 3122, 64, 665, 1208, 12714, 416, 5969, 11, 1208, 69086, 81, 7583, 379, 1208, 20847, 3739, 13, 9853, 4706, 437, 379, 1099, 64501, 17038, 74713, 92970, 5203, 1826, 89029, 1080, 1964, 6960, 390, 658, 63816, 1624, 29928, 9302, 13, 3341, 2540, 62527, 25, 350, 8875, 437, 14113, 288, 320, 17, 4235, 17, 13, 20, 17585, 8, 9589, 18536, 1584, 278, 11, 4671, 12183, 379, 6617, 78, 4349, 4692, 19290, 5670, 409, 1208, 7251, 49251, 8533, 28952, 426, 81492, 924, 402, 39961, 2579, 17675, 5670, 5345, 416, 12712, 25, 37770, 19826, 11, 4225, 26113, 25318, 11, 3118, 12712, 379, 47178, 65207, 13, 4158, 49022, 2145, 41852, 3429, 3190, 33469, 300, 11, 100127, 379, 45558, 645, 409, 1376, 5840, 13, 5034, 20064, 5969, 9302, 44035, 3074, 33186, 8112, 5252, 74304, 13, 220, 21, 13, 5345, 416, 12712, 409, 2947, 936, 5034, 3608, 5969, 9302, 409, 356, 2827, 268, 44190, 513, 39732, 2629, 264, 47009, 779, 45808, 11, 26976, 34229, 8862, 6824, 8968, 379, 2531, 57335, 13, 53858, 3342, 2353, 25, 12051, 437, 2655, 437, 379, 8533, 64545, 25, 3289, 84578, 5670, 11, 61777, 379, 70383, 14113, 68, 13, 3816, 288, 65207, 25, 59472, 11, 7493, 11, 79600, 11, 586, 12712, 13, 29508, 822, 3566, 25, 1080, 1964, 8968, 9465, 1400, 4692, 11, 11813, 26113, 7583, 384, 4706, 26113, 7583, 13, 32743, 8023, 7583, 25, 6136, 34344, 3429, 6155, 14357, 11, 6179, 288, 11, 3118, 12712, 379, 12460, 15769, 300, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-10-10 22:18:38,625] [DEBUG] [_base_client.py:978 - request()] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-10-10 22:18:38,625] [DEBUG] [_trace.py:47 - trace()] send_request_headers.started request=<Request [b'POST']>
[2025-10-10 22:18:38,625] [DEBUG] [_trace.py:47 - trace()] send_request_headers.complete
[2025-10-10 22:18:38,626] [DEBUG] [_trace.py:47 - trace()] send_request_body.started request=<Request [b'POST']>
[2025-10-10 22:18:38,626] [DEBUG] [_trace.py:47 - trace()] send_request_body.complete
[2025-10-10 22:18:38,626] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.started request=<Request [b'POST']>
[2025-10-10 22:18:38,830] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 21:18:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'user-8adwua04dismr8hiw4ywtfpm'), (b'openai-processing-ms', b'48'), (b'openai-project', b'proj_OfpXUE2umFtFZX4ebQwNNJP2'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-64df5c5b59-64f6d'), (b'x-envoy-upstream-service-time', b'68'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999760'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'14ms'), (b'x-request-id', b'req_60dc04eb924448ebbba072a5986af93b'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=Log.rHUIs5BXD_Xnv4Eawdoc98P33JC4ocImSVur7Q0-1760131108-1.0.1.1-SRbELXli1sPvkUnMji2Yy458jPK.SpEZHub.BZ27GO3Rw3U7XTljckszsbCC6WxcSqiwRD51j3gUFsdbImZchUHA1fr18duQX1yB8S4yxNo; path=/; expires=Fri, 10-Oct-25 21:48:28 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c9268588dc035e-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-10-10 22:18:38,830] [INFO] [_client.py:1025 - _send_single_request()] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-10-10 22:18:38,831] [DEBUG] [_trace.py:47 - trace()] receive_response_body.started request=<Request [b'POST']>
[2025-10-10 22:18:38,831] [DEBUG] [_trace.py:47 - trace()] receive_response_body.complete
[2025-10-10 22:18:38,831] [DEBUG] [_trace.py:47 - trace()] response_closed.started
[2025-10-10 22:18:38,831] [DEBUG] [_trace.py:47 - trace()] response_closed.complete
[2025-10-10 22:18:38,831] [DEBUG] [_base_client.py:1016 - request()] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 10 Oct 2025 21:18:28 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'user-8adwua04dismr8hiw4ywtfpm', 'openai-processing-ms': '48', 'openai-project': 'proj_OfpXUE2umFtFZX4ebQwNNJP2', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-64df5c5b59-64f6d', 'x-envoy-upstream-service-time': '68', 'x-ratelimit-limit-requests': '3000', 'x-ratelimit-limit-tokens': '1000000', 'x-ratelimit-remaining-requests': '2999', 'x-ratelimit-remaining-tokens': '999760', 'x-ratelimit-reset-requests': '20ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_60dc04eb924448ebbba072a5986af93b', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=Log.rHUIs5BXD_Xnv4Eawdoc98P33JC4ocImSVur7Q0-1760131108-1.0.1.1-SRbELXli1sPvkUnMji2Yy458jPK.SpEZHub.BZ27GO3Rw3U7XTljckszsbCC6WxcSqiwRD51j3gUFsdbImZchUHA1fr18duQX1yB8S4yxNo; path=/; expires=Fri, 10-Oct-25 21:48:28 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98c9268588dc035e-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-10-10 22:18:38,832] [DEBUG] [_base_client.py:1024 - request()] request_id: req_60dc04eb924448ebbba072a5986af93b
[2025-10-10 22:18:38,832] [DEBUG] [_base_client.py:482 - _build_request()] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-9c47ef28-60aa-45c4-9390-4395d2731180', 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002837CBD7380>, 'json_data': {'input': [[65, 416, 12712, 13, 29508, 822, 3566, 25, 1080, 1964, 8968, 9465, 1400, 4692, 11, 11813, 26113, 7583, 384, 4706, 26113, 7583, 13, 32743, 8023, 7583, 25, 6136, 34344, 3429, 6155, 14357, 11, 6179, 288, 11, 3118, 12712, 379, 12460, 15769, 300, 13, 356, 2649, 75427, 35474, 92970, 1208, 2047, 50922, 3739, 87818, 86200, 409, 1933, 11, 11813, 26113, 7583, 379, 66584, 665, 90647, 13, 220, 22, 13, 350, 10358, 379, 9589, 18536, 20796, 356, 2827, 268, 44190, 44035, 3074, 23553, 1208, 41934, 54433, 11, 20003, 390, 5203, 85190, 2854, 3444, 13, 17360, 8941, 78, 9302, 35474, 2098, 273, 19571, 20064, 5969, 11, 20847, 3739, 379, 5203, 9721, 5840, 47562, 3444, 453, 16787, 13, 11165, 54988, 1709, 7583, 25, 55947, 5840, 64267, 50129, 15323, 1122, 4458, 9302, 8626, 288, 4001, 17434, 85195, 1260, 42770, 71355, 390, 2047, 99954, 20319, 266, 17528, 49841, 11, 1922, 346, 96616, 13, 4072, 84908, 912, 13839, 1654, 6347, 2001, 48126, 10743, 1208, 5906, 3739, 409, 356, 2827, 268, 44190, 665, 5203, 54413, 9302, 1080, 1964, 6960, 379, 2389, 2205, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-10-10 22:18:38,833] [DEBUG] [_base_client.py:978 - request()] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-10-10 22:18:38,833] [DEBUG] [_trace.py:47 - trace()] send_request_headers.started request=<Request [b'POST']>
[2025-10-10 22:18:38,833] [DEBUG] [_trace.py:47 - trace()] send_request_headers.complete
[2025-10-10 22:18:38,833] [DEBUG] [_trace.py:47 - trace()] send_request_body.started request=<Request [b'POST']>
[2025-10-10 22:18:38,833] [DEBUG] [_trace.py:47 - trace()] send_request_body.complete
[2025-10-10 22:18:38,833] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.started request=<Request [b'POST']>
[2025-10-10 22:18:39,035] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 21:18:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'user-8adwua04dismr8hiw4ywtfpm'), (b'openai-processing-ms', b'40'), (b'openai-project', b'proj_OfpXUE2umFtFZX4ebQwNNJP2'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-64df5c5b59-9hzsb'), (b'x-envoy-upstream-service-time', b'59'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999825'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_c26f912b5d7a4b8d96e7a4a58b73e275'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=imAyb9_dqIfSILEt369yxgo9S.eIRnYHnB4r29iEFkM-1760131109-1.0.1.1-XiskjsoeAuBaS_dh_wLw64ZzEcYOPArrsnGkiBMSxZPMRYUOyLfrn3WBi7d.AaoXS91gJV35qh2WANkfMYFtG.6e3BoR5Yu.psIm8m4SHys; path=/; expires=Fri, 10-Oct-25 21:48:29 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c92686cc82035e-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-10-10 22:18:39,035] [INFO] [_client.py:1025 - _send_single_request()] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-10-10 22:18:39,035] [DEBUG] [_trace.py:47 - trace()] receive_response_body.started request=<Request [b'POST']>
[2025-10-10 22:18:39,035] [DEBUG] [_trace.py:47 - trace()] receive_response_body.complete
[2025-10-10 22:18:39,036] [DEBUG] [_trace.py:47 - trace()] response_closed.started
[2025-10-10 22:18:39,036] [DEBUG] [_trace.py:47 - trace()] response_closed.complete
[2025-10-10 22:18:39,036] [DEBUG] [_base_client.py:1016 - request()] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 10 Oct 2025 21:18:29 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'user-8adwua04dismr8hiw4ywtfpm', 'openai-processing-ms': '40', 'openai-project': 'proj_OfpXUE2umFtFZX4ebQwNNJP2', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-64df5c5b59-9hzsb', 'x-envoy-upstream-service-time': '59', 'x-ratelimit-limit-requests': '3000', 'x-ratelimit-limit-tokens': '1000000', 'x-ratelimit-remaining-requests': '2999', 'x-ratelimit-remaining-tokens': '999825', 'x-ratelimit-reset-requests': '20ms', 'x-ratelimit-reset-tokens': '10ms', 'x-request-id': 'req_c26f912b5d7a4b8d96e7a4a58b73e275', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=imAyb9_dqIfSILEt369yxgo9S.eIRnYHnB4r29iEFkM-1760131109-1.0.1.1-XiskjsoeAuBaS_dh_wLw64ZzEcYOPArrsnGkiBMSxZPMRYUOyLfrn3WBi7d.AaoXS91gJV35qh2WANkfMYFtG.6e3BoR5Yu.psIm8m4SHys; path=/; expires=Fri, 10-Oct-25 21:48:29 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98c92686cc82035e-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-10-10 22:18:39,036] [DEBUG] [_base_client.py:1024 - request()] request_id: req_c26f912b5d7a4b8d96e7a4a58b73e275
[2025-10-10 22:21:35,006] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:21:35,006] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[42:61]
[2025-10-10 22:21:35,006] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[63:86]
[2025-10-10 22:21:35,006] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:21:35,006] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:21:35,006] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[90:102]
[2025-10-10 22:21:35,006] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[146:165]
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[167:196]
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[200:211]
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[255:274]
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[276:302]
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[306:307]
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:628 - callback()] Calling on_part_begin with no data
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[351:370]
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[372:428]
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:625 - callback()] Calling on_header_field with data[430:442]
[2025-10-10 22:21:35,007] [DEBUG] [multipart.py:625 - callback()] Calling on_header_value with data[444:515]
[2025-10-10 22:21:35,008] [DEBUG] [multipart.py:628 - callback()] Calling on_header_end with no data
[2025-10-10 22:21:35,008] [DEBUG] [multipart.py:628 - callback()] Calling on_headers_finished with no data
[2025-10-10 22:21:35,008] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[519:32768]
[2025-10-10 22:21:35,008] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:196608]
[2025-10-10 22:21:35,008] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:114688]
[2025-10-10 22:21:35,009] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:180224]
[2025-10-10 22:21:35,009] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:114688]
[2025-10-10 22:21:35,009] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:131072]
[2025-10-10 22:21:35,010] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:114688]
[2025-10-10 22:21:35,010] [DEBUG] [multipart.py:625 - callback()] Calling on_part_data with data[0:19852]
[2025-10-10 22:21:35,010] [DEBUG] [multipart.py:628 - callback()] Calling on_part_end with no data
[2025-10-10 22:21:35,010] [DEBUG] [multipart.py:628 - callback()] Calling on_end with no data
[2025-10-10 22:21:35,599] [DEBUG] [_base_client.py:482 - _build_request()] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-3f321746-c93f-4f72-9a06-7e21b213c25d', 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000028362538680>, 'json_data': {'input': [[29401, 5969, 20796, 220, 16, 13, 1357, 4653, 22776, 5034, 3608, 5969, 9302, 409, 356, 2827, 268, 44190, 1560, 658, 2098, 273, 7453, 50401, 409, 924, 1560, 8968, 25, 9721, 5840, 64267, 50129, 11, 20064, 5969, 379, 2047, 99954, 97557, 13, 356, 2649, 10732, 22776, 9302, 2001, 5919, 451, 2537, 1400, 4692, 29626, 1208, 11813, 26113, 7583, 2345, 4790, 10743, 665, 41669, 781, 1744, 1794, 437, 8112, 945, 8968, 25, 5203, 653, 3739, 3312, 321, 10892, 2649, 9465, 41934, 54433, 99392, 2649, 379, 47562, 276, 7583, 76348, 13, 39776, 54526, 50914, 40192, 11403, 1080, 1964, 8968, 379, 14113, 5969, 665, 41278, 46915, 5840, 9302, 409, 1208, 47097, 11, 2655, 64, 297, 16011, 64, 13, 5034, 3608, 5969, 409, 356, 2827, 268, 44190, 35474, 1446, 84011, 1260, 11, 2389, 2205, 379, 1080, 1964, 6960, 11, 7589, 1179, 277, 658, 40021, 297, 55956, 13, 220, 17, 13, 2905, 354, 7088, 4072, 1515, 354, 7088, 409, 356, 2827, 268, 44190, 1560, 658, 45815, 3172, 10216, 8792, 409, 1208, 47097, 13, 22717, 64, 658, 3312, 31059, 10599, 9465, 90745, 8968, 2854, 3444, 379, 21075, 11, 2098, 273, 73, 4988, 90958, 11, 20847, 3739, 379, 3721, 78176, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-10-10 22:21:35,600] [DEBUG] [_base_client.py:978 - request()] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-10-10 22:21:35,600] [DEBUG] [_trace.py:47 - trace()] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
[2025-10-10 22:21:35,698] [DEBUG] [_trace.py:47 - trace()] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002837DDADBA0>
[2025-10-10 22:21:35,698] [DEBUG] [_trace.py:47 - trace()] start_tls.started ssl_context=<ssl.SSLContext object at 0x000002837CB9E720> server_hostname='api.openai.com' timeout=None
[2025-10-10 22:21:35,729] [DEBUG] [_trace.py:47 - trace()] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002837DDA4050>
[2025-10-10 22:21:35,729] [DEBUG] [_trace.py:47 - trace()] send_request_headers.started request=<Request [b'POST']>
[2025-10-10 22:21:35,730] [DEBUG] [_trace.py:47 - trace()] send_request_headers.complete
[2025-10-10 22:21:35,730] [DEBUG] [_trace.py:47 - trace()] send_request_body.started request=<Request [b'POST']>
[2025-10-10 22:21:35,730] [DEBUG] [_trace.py:47 - trace()] send_request_body.complete
[2025-10-10 22:21:35,730] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.started request=<Request [b'POST']>
[2025-10-10 22:21:35,939] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 21:21:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'user-8adwua04dismr8hiw4ywtfpm'), (b'openai-processing-ms', b'37'), (b'openai-project', b'proj_OfpXUE2umFtFZX4ebQwNNJP2'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-64df5c5b59-6j5bv'), (b'x-envoy-upstream-service-time', b'58'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999807'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'11ms'), (b'x-request-id', b'req_fa5e5468d1ea48eba07bdb9ff4c88e6e'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=LdCea8ss94UywqO5ekS_NVQ7QJpW5HzAve2RGf7_N.g-1760131286-1.0.1.1-R66PSs3alzfFUwcZRUio52nEJQSMBkJJqD8l1QS.5e.JEOqTGzC2BoC_WHxmvx6Swwul2f53HmTo9klPpC3dacispr7tkXA8NQWE1dc840E; path=/; expires=Fri, 10-Oct-25 21:51:26 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=Ah21JIFDjmncpUJUw6H.VdO0MSLsv_pa1BXpenhirL4-1760131286013-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c92ad8782c2f81-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-10-10 22:21:35,939] [INFO] [_client.py:1025 - _send_single_request()] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-10-10 22:21:35,939] [DEBUG] [_trace.py:47 - trace()] receive_response_body.started request=<Request [b'POST']>
[2025-10-10 22:21:35,940] [DEBUG] [_trace.py:47 - trace()] receive_response_body.complete
[2025-10-10 22:21:35,940] [DEBUG] [_trace.py:47 - trace()] response_closed.started
[2025-10-10 22:21:35,940] [DEBUG] [_trace.py:47 - trace()] response_closed.complete
[2025-10-10 22:21:35,940] [DEBUG] [_base_client.py:1016 - request()] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers([('date', 'Fri, 10 Oct 2025 21:21:26 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002-v2'), ('openai-organization', 'user-8adwua04dismr8hiw4ywtfpm'), ('openai-processing-ms', '37'), ('openai-project', 'proj_OfpXUE2umFtFZX4ebQwNNJP2'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('via', 'envoy-router-64df5c5b59-6j5bv'), ('x-envoy-upstream-service-time', '58'), ('x-ratelimit-limit-requests', '3000'), ('x-ratelimit-limit-tokens', '1000000'), ('x-ratelimit-remaining-requests', '2999'), ('x-ratelimit-remaining-tokens', '999807'), ('x-ratelimit-reset-requests', '20ms'), ('x-ratelimit-reset-tokens', '11ms'), ('x-request-id', 'req_fa5e5468d1ea48eba07bdb9ff4c88e6e'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=LdCea8ss94UywqO5ekS_NVQ7QJpW5HzAve2RGf7_N.g-1760131286-1.0.1.1-R66PSs3alzfFUwcZRUio52nEJQSMBkJJqD8l1QS.5e.JEOqTGzC2BoC_WHxmvx6Swwul2f53HmTo9klPpC3dacispr7tkXA8NQWE1dc840E; path=/; expires=Fri, 10-Oct-25 21:51:26 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=Ah21JIFDjmncpUJUw6H.VdO0MSLsv_pa1BXpenhirL4-1760131286013-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '98c92ad8782c2f81-MAD'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
[2025-10-10 22:21:35,940] [DEBUG] [_base_client.py:1024 - request()] request_id: req_fa5e5468d1ea48eba07bdb9ff4c88e6e
[2025-10-10 22:21:35,941] [DEBUG] [_base_client.py:482 - _build_request()] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-0ae0b417-cca9-40e2-a062-8991d1a821cf', 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000028362538A40>, 'json_data': {'input': [[48422, 44190, 1560, 658, 45815, 3172, 10216, 8792, 409, 1208, 47097, 13, 22717, 64, 658, 3312, 31059, 10599, 9465, 90745, 8968, 2854, 3444, 379, 21075, 11, 2098, 273, 73, 4988, 90958, 11, 20847, 3739, 379, 3721, 78176, 13, 6207, 288, 70720, 25, 37409, 320, 64, 1933, 1680, 3429, 21901, 437, 64347, 437, 297, 23321, 20064, 437, 13, 20054, 28952, 320, 258, 3078, 64, 1680, 97591, 1529, 64345, 3429, 21901, 437, 32047, 44486, 297, 32940, 83581, 17038, 13, 3206, 511, 442, 49602, 25, 665, 62833, 297, 86930, 3429, 77998, 11685, 69406, 13, 4073, 437, 4495, 437, 25, 52068, 804, 66584, 409, 64404, 453, 1171, 25356, 1624, 1515, 354, 7088, 13, 4073, 277, 42698, 2537, 1400, 4692, 315, 24985, 645, 409, 1208, 7251, 49251, 13, 10641, 12635, 21901, 437, 390, 88748, 2531, 57335, 13, 4073, 437, 15465, 437, 25, 2360, 1612, 1105, 290, 277, 13080, 5868, 277, 658, 1515, 354, 7088, 13, 2360, 11857, 277, 1208, 2047, 50922, 3739, 13080, 30540, 277, 44046, 437, 409, 1794, 14720, 297, 409, 6902, 2172, 13, 2360, 70820, 2537, 1400, 4692, 36222, 13652, 13080, 73286, 42273, 39002, 288, 297, 72954, 3714, 16011, 437, 13, 4072, 1515, 354, 7088, 1560, 1208, 85190, 9302, 409, 1208, 47097, 13, 17360, 6824, 8968, 81870, 84011, 16721, 379, 2389, 1122, 4458, 13, 220, 18, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-10-10 22:21:35,941] [DEBUG] [_base_client.py:978 - request()] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-10-10 22:21:35,941] [DEBUG] [_trace.py:47 - trace()] send_request_headers.started request=<Request [b'POST']>
[2025-10-10 22:21:35,941] [DEBUG] [_trace.py:47 - trace()] send_request_headers.complete
[2025-10-10 22:21:35,941] [DEBUG] [_trace.py:47 - trace()] send_request_body.started request=<Request [b'POST']>
[2025-10-10 22:21:35,942] [DEBUG] [_trace.py:47 - trace()] send_request_body.complete
[2025-10-10 22:21:35,942] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.started request=<Request [b'POST']>
[2025-10-10 22:21:36,165] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 21:21:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'user-8adwua04dismr8hiw4ywtfpm'), (b'openai-processing-ms', b'60'), (b'openai-project', b'proj_OfpXUE2umFtFZX4ebQwNNJP2'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-59b4744449-kxk7l'), (b'x-envoy-upstream-service-time', b'80'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999785'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'12ms'), (b'x-request-id', b'req_13c0abe608c640439f4644b3df4990c9'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=jFNTR09wc551qGrTpC9jLcdkg5V0_v1EMQvBi5inVtI-1760131286-1.0.1.1-AIBvVlRvFpbw3N9s25c2TOiZhpHcekLKB_TP6KpAYpeZvE3Sphs1w3.Z22RsJ2yc40yNr6fFKc_uy8hCGUvYnqwTsJI.KGWJ0tgQF0EnlbE; path=/; expires=Fri, 10-Oct-25 21:51:26 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c92ad9c9092f81-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-10-10 22:21:36,166] [INFO] [_client.py:1025 - _send_single_request()] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-10-10 22:21:36,166] [DEBUG] [_trace.py:47 - trace()] receive_response_body.started request=<Request [b'POST']>
[2025-10-10 22:21:36,167] [DEBUG] [_trace.py:47 - trace()] receive_response_body.complete
[2025-10-10 22:21:36,167] [DEBUG] [_trace.py:47 - trace()] response_closed.started
[2025-10-10 22:21:36,167] [DEBUG] [_trace.py:47 - trace()] response_closed.complete
[2025-10-10 22:21:36,167] [DEBUG] [_base_client.py:1016 - request()] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 10 Oct 2025 21:21:26 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'user-8adwua04dismr8hiw4ywtfpm', 'openai-processing-ms': '60', 'openai-project': 'proj_OfpXUE2umFtFZX4ebQwNNJP2', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-59b4744449-kxk7l', 'x-envoy-upstream-service-time': '80', 'x-ratelimit-limit-requests': '3000', 'x-ratelimit-limit-tokens': '1000000', 'x-ratelimit-remaining-requests': '2999', 'x-ratelimit-remaining-tokens': '999785', 'x-ratelimit-reset-requests': '20ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_13c0abe608c640439f4644b3df4990c9', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=jFNTR09wc551qGrTpC9jLcdkg5V0_v1EMQvBi5inVtI-1760131286-1.0.1.1-AIBvVlRvFpbw3N9s25c2TOiZhpHcekLKB_TP6KpAYpeZvE3Sphs1w3.Z22RsJ2yc40yNr6fFKc_uy8hCGUvYnqwTsJI.KGWJ0tgQF0EnlbE; path=/; expires=Fri, 10-Oct-25 21:51:26 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98c92ad9c9092f81-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-10-10 22:21:36,167] [DEBUG] [_base_client.py:1024 - request()] request_id: req_13c0abe608c640439f4644b3df4990c9
[2025-10-10 22:21:36,168] [DEBUG] [_base_client.py:482 - _build_request()] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-6468cdca-c0ed-4e36-a92f-1644fd9ecb01', 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000028362538680>, 'json_data': {'input': [[82, 1400, 4692, 36222, 13652, 13080, 73286, 42273, 39002, 288, 297, 72954, 3714, 16011, 437, 13, 4072, 1515, 354, 7088, 1560, 1208, 85190, 9302, 409, 1208, 47097, 13, 17360, 6824, 8968, 81870, 84011, 16721, 379, 2389, 1122, 4458, 13, 220, 18, 13, 16056, 49251, 409, 4349, 4692, 5034, 7251, 49251, 272, 442, 49602, 409, 356, 2827, 268, 44190, 3698, 2259, 41934, 54433, 379, 3823, 5969, 11, 64282, 4988, 3312, 31059, 10599, 9465, 1208, 39751, 4458, 1624, 4411, 2172, 379, 1208, 1446, 268, 5969, 1624, 12657, 360, 13, 4072, 68593, 1380, 53995, 76348, 17434, 11, 9721, 5840, 379, 20064, 5969, 9302, 13, 11964, 31059, 10599, 272, 442, 67649, 71494, 2172, 25, 220, 1399, 4, 90647, 297, 86930, 76321, 30183, 29421, 611, 674, 37, 20, 37, 21, 1785, 8, 220, 914, 4, 8941, 437, 12657, 2482, 30183, 21, 33, 22, 49145, 611, 674, 23, 33, 24, 49145, 8, 220, 868, 4, 4411, 2172, 12717, 30183, 18, 35, 17, 33, 1785, 8, 3429, 73467, 277, 259, 16485, 29752, 379, 51204, 11354, 264, 1208, 90164, 13, 4072, 1933, 9036, 3370, 44035, 3074, 4602, 7583, 384, 9721, 5840, 26, 2537, 8941, 437, 5819, 1263, 10308, 264, 403, 276, 1652, 1764, 379, 3312, 31059, 10599, 13, 220, 19, 13, 30973, 26113, 7583, 11095, 28952, 5034, 11813, 26113, 7583, 409, 356, 2827, 268, 44190, 2098, 8977, 4458, 924, 4443, 5969, 41934, 61194, 3074, 379, 76348, 11, 30382, 37116, 20064, 5969, 11, 9721, 5840, 379, 76509, 5808, 13, 53259, 3557, 315, 24985, 645, 25, 85557, 2298, 11651, 259, 16485, 29752, 379, 1515, 354, 7088, 13, 9589, 18536, 25, 47102, 611, 26041, 47102, 3341, 1995, 75169, 25, 18111, 324, 9265, 11, 5956, 15782, 379, 11376, 3370, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-10-10 22:21:36,168] [DEBUG] [_base_client.py:978 - request()] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-10-10 22:21:36,169] [DEBUG] [_trace.py:47 - trace()] send_request_headers.started request=<Request [b'POST']>
[2025-10-10 22:21:36,169] [DEBUG] [_trace.py:47 - trace()] send_request_headers.complete
[2025-10-10 22:21:36,169] [DEBUG] [_trace.py:47 - trace()] send_request_body.started request=<Request [b'POST']>
[2025-10-10 22:21:36,169] [DEBUG] [_trace.py:47 - trace()] send_request_body.complete
[2025-10-10 22:21:36,169] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.started request=<Request [b'POST']>
[2025-10-10 22:21:36,389] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 21:21:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'user-8adwua04dismr8hiw4ywtfpm'), (b'openai-processing-ms', b'38'), (b'openai-project', b'proj_OfpXUE2umFtFZX4ebQwNNJP2'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-64df5c5b59-xjchc'), (b'x-envoy-upstream-service-time', b'54'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999722'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'16ms'), (b'x-request-id', b'req_891f7ae140e84cb4bc5f31f30516eb6e'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=luO1FK8Hfs9yAIPVqZQcMAJ5RQigp8w2VSiDCfWgYv8-1760131286-1.0.1.1-Xnq60ZEC6EngJDISh.91G88Y9XzjtyNTe4g5wPuWPqyOteD1yBVyLQ_CceWZleEaA4Kr73Pe5rrKNHAis0aQG5RGMu4VQoE0wDRJuoNjVOU; path=/; expires=Fri, 10-Oct-25 21:51:26 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c92adb39ec2f81-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-10-10 22:21:36,390] [INFO] [_client.py:1025 - _send_single_request()] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-10-10 22:21:36,390] [DEBUG] [_trace.py:47 - trace()] receive_response_body.started request=<Request [b'POST']>
[2025-10-10 22:21:36,390] [DEBUG] [_trace.py:47 - trace()] receive_response_body.complete
[2025-10-10 22:21:36,390] [DEBUG] [_trace.py:47 - trace()] response_closed.started
[2025-10-10 22:21:36,390] [DEBUG] [_trace.py:47 - trace()] response_closed.complete
[2025-10-10 22:21:36,390] [DEBUG] [_base_client.py:1016 - request()] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 10 Oct 2025 21:21:26 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'user-8adwua04dismr8hiw4ywtfpm', 'openai-processing-ms': '38', 'openai-project': 'proj_OfpXUE2umFtFZX4ebQwNNJP2', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-64df5c5b59-xjchc', 'x-envoy-upstream-service-time': '54', 'x-ratelimit-limit-requests': '3000', 'x-ratelimit-limit-tokens': '1000000', 'x-ratelimit-remaining-requests': '2999', 'x-ratelimit-remaining-tokens': '999722', 'x-ratelimit-reset-requests': '20ms', 'x-ratelimit-reset-tokens': '16ms', 'x-request-id': 'req_891f7ae140e84cb4bc5f31f30516eb6e', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=luO1FK8Hfs9yAIPVqZQcMAJ5RQigp8w2VSiDCfWgYv8-1760131286-1.0.1.1-Xnq60ZEC6EngJDISh.91G88Y9XzjtyNTe4g5wPuWPqyOteD1yBVyLQ_CceWZleEaA4Kr73Pe5rrKNHAis0aQG5RGMu4VQoE0wDRJuoNjVOU; path=/; expires=Fri, 10-Oct-25 21:51:26 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98c92adb39ec2f81-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-10-10 22:21:36,391] [DEBUG] [_base_client.py:1024 - request()] request_id: req_891f7ae140e84cb4bc5f31f30516eb6e
[2025-10-10 22:21:36,391] [DEBUG] [_base_client.py:482 - _build_request()] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-840f56be-4c64-4600-8fec-072b335066e2', 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000028362538A40>, 'json_data': {'input': [[5969, 11, 9721, 5840, 379, 76509, 5808, 13, 53259, 3557, 315, 24985, 645, 25, 85557, 2298, 11651, 259, 16485, 29752, 379, 1515, 354, 7088, 13, 9589, 18536, 25, 47102, 611, 26041, 47102, 3341, 1995, 75169, 25, 18111, 324, 9265, 11, 5956, 15782, 379, 11376, 3370, 13, 4997, 2117, 12980, 11651, 42129, 16485, 29752, 11, 10980, 5670, 87263, 85530, 379, 32118, 376, 15540, 13, 9589, 18536, 25, 25352, 611, 55738, 43900, 3341, 1995, 75169, 25, 71623, 4042, 11, 39488, 2172, 11, 52764, 13, 5783, 11651, 63613, 409, 33125, 11, 65845, 637, 2642, 437, 379, 100127, 13, 9589, 18536, 25, 29900, 611, 8828, 611, 25352, 3341, 1995, 75169, 25, 85195, 1260, 11, 4671, 12183, 379, 97557, 13, 8569, 277, 447, 7583, 11813, 83581, 3074, 25, 473, 16, 1389, 85557, 2298, 47102, 11, 220, 2166, 4235, 1227, 11051, 473, 17, 1389, 4997, 2117, 12980, 55738, 43900, 11, 220, 1591, 4235, 1927, 11051, 473, 18, 1389, 5783, 55738, 43900, 11, 220, 508, 4235, 1187, 11051, 393, 1995, 637, 64, 831, 1389, 5783, 29900, 11, 220, 845, 11051, 41097, 409, 47401, 1389, 5783, 8828, 11, 220, 1032, 4235, 975, 11051, 85557, 2298, 12979, 64, 11, 4997, 2117, 12980, 76509, 5808, 11, 5783, 44035, 3074, 13, 220, 20, 13, 11475, 26113, 7583, 379, 9589, 18536, 20796, 4072, 326, 28102, 11305, 9302, 409, 356, 2827, 268, 44190, 513, 3122, 64, 665, 1208, 12714, 416, 5969, 11, 1208, 69086, 81, 7583, 379, 1208, 20847, 3739, 13, 9853, 4706, 437, 379, 1099, 64501, 17038, 74713, 92970, 5203, 1826, 89029, 1080, 1964, 6960, 390, 658, 63816, 1624, 29928, 9302, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-10-10 22:21:36,392] [DEBUG] [_base_client.py:978 - request()] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-10-10 22:21:36,392] [DEBUG] [_trace.py:47 - trace()] send_request_headers.started request=<Request [b'POST']>
[2025-10-10 22:21:36,392] [DEBUG] [_trace.py:47 - trace()] send_request_headers.complete
[2025-10-10 22:21:36,392] [DEBUG] [_trace.py:47 - trace()] send_request_body.started request=<Request [b'POST']>
[2025-10-10 22:21:36,392] [DEBUG] [_trace.py:47 - trace()] send_request_body.complete
[2025-10-10 22:21:36,392] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.started request=<Request [b'POST']>
[2025-10-10 22:21:36,611] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 21:21:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'user-8adwua04dismr8hiw4ywtfpm'), (b'openai-processing-ms', b'56'), (b'openai-project', b'proj_OfpXUE2umFtFZX4ebQwNNJP2'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-59b4744449-chmc5'), (b'x-envoy-upstream-service-time', b'78'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999740'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'15ms'), (b'x-request-id', b'req_699c9961043d41abbe5f0996f097b306'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=ESyXKI1ztY_SaW0X_OcUiRgSEg0el9gbdnNOXLq2_n0-1760131286-1.0.1.1-v0XXAttT3UPErT8G8X.Isn6lLkofLsI9sxT2rE.WpoxfOckujPOtlDixqGdqfbEglj8VxGu_gEa2kvlB_hBbSd3rY4gi8veH.sC1biF1RpA; path=/; expires=Fri, 10-Oct-25 21:51:26 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c92adc9b472f81-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-10-10 22:21:36,611] [INFO] [_client.py:1025 - _send_single_request()] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-10-10 22:21:36,611] [DEBUG] [_trace.py:47 - trace()] receive_response_body.started request=<Request [b'POST']>
[2025-10-10 22:21:36,612] [DEBUG] [_trace.py:47 - trace()] receive_response_body.complete
[2025-10-10 22:21:36,612] [DEBUG] [_trace.py:47 - trace()] response_closed.started
[2025-10-10 22:21:36,612] [DEBUG] [_trace.py:47 - trace()] response_closed.complete
[2025-10-10 22:21:36,612] [DEBUG] [_base_client.py:1016 - request()] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 10 Oct 2025 21:21:26 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'user-8adwua04dismr8hiw4ywtfpm', 'openai-processing-ms': '56', 'openai-project': 'proj_OfpXUE2umFtFZX4ebQwNNJP2', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-59b4744449-chmc5', 'x-envoy-upstream-service-time': '78', 'x-ratelimit-limit-requests': '3000', 'x-ratelimit-limit-tokens': '1000000', 'x-ratelimit-remaining-requests': '2999', 'x-ratelimit-remaining-tokens': '999740', 'x-ratelimit-reset-requests': '20ms', 'x-ratelimit-reset-tokens': '15ms', 'x-request-id': 'req_699c9961043d41abbe5f0996f097b306', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=ESyXKI1ztY_SaW0X_OcUiRgSEg0el9gbdnNOXLq2_n0-1760131286-1.0.1.1-v0XXAttT3UPErT8G8X.Isn6lLkofLsI9sxT2rE.WpoxfOckujPOtlDixqGdqfbEglj8VxGu_gEa2kvlB_hBbSd3rY4gi8veH.sC1biF1RpA; path=/; expires=Fri, 10-Oct-25 21:51:26 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98c92adc9b472f81-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-10-10 22:21:36,612] [DEBUG] [_base_client.py:1024 - request()] request_id: req_699c9961043d41abbe5f0996f097b306
[2025-10-10 22:21:36,613] [DEBUG] [_base_client.py:482 - _build_request()] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-b40c760e-9e6a-4871-b3e2-3f62678f5c1a', 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000028362538680>, 'json_data': {'input': [[32, 513, 3122, 64, 665, 1208, 12714, 416, 5969, 11, 1208, 69086, 81, 7583, 379, 1208, 20847, 3739, 13, 9853, 4706, 437, 379, 1099, 64501, 17038, 74713, 92970, 5203, 1826, 89029, 1080, 1964, 6960, 390, 658, 63816, 1624, 29928, 9302, 13, 3341, 2540, 62527, 25, 350, 8875, 437, 14113, 288, 320, 17, 4235, 17, 13, 20, 17585, 8, 9589, 18536, 1584, 278, 11, 4671, 12183, 379, 6617, 78, 4349, 4692, 19290, 5670, 409, 1208, 7251, 49251, 8533, 28952, 426, 81492, 924, 402, 39961, 2579, 17675, 5670, 5345, 416, 12712, 25, 37770, 19826, 11, 4225, 26113, 25318, 11, 3118, 12712, 379, 47178, 65207, 13, 4158, 49022, 2145, 41852, 3429, 3190, 33469, 300, 11, 100127, 379, 45558, 645, 409, 1376, 5840, 13, 5034, 20064, 5969, 9302, 44035, 3074, 33186, 8112, 5252, 74304, 13, 220, 21, 13, 5345, 416, 12712, 409, 2947, 936, 5034, 3608, 5969, 9302, 409, 356, 2827, 268, 44190, 513, 39732, 2629, 264, 47009, 779, 45808, 11, 26976, 34229, 8862, 6824, 8968, 379, 2531, 57335, 13, 53858, 3342, 2353, 25, 12051, 437, 2655, 437, 379, 8533, 64545, 25, 3289, 84578, 5670, 11, 61777, 379, 70383, 14113, 68, 13, 3816, 288, 65207, 25, 59472, 11, 7493, 11, 79600, 11, 586, 12712, 13, 29508, 822, 3566, 25, 1080, 1964, 8968, 9465, 1400, 4692, 11, 11813, 26113, 7583, 384, 4706, 26113, 7583, 13, 32743, 8023, 7583, 25, 6136, 34344, 3429, 6155, 14357, 11, 6179, 288, 11, 3118, 12712, 379, 12460, 15769, 300, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-10-10 22:21:36,613] [DEBUG] [_base_client.py:978 - request()] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-10-10 22:21:36,613] [DEBUG] [_trace.py:47 - trace()] send_request_headers.started request=<Request [b'POST']>
[2025-10-10 22:21:36,613] [DEBUG] [_trace.py:47 - trace()] send_request_headers.complete
[2025-10-10 22:21:36,614] [DEBUG] [_trace.py:47 - trace()] send_request_body.started request=<Request [b'POST']>
[2025-10-10 22:21:36,614] [DEBUG] [_trace.py:47 - trace()] send_request_body.complete
[2025-10-10 22:21:36,614] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.started request=<Request [b'POST']>
[2025-10-10 22:21:36,850] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 21:21:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'user-8adwua04dismr8hiw4ywtfpm'), (b'openai-processing-ms', b'74'), (b'openai-project', b'proj_OfpXUE2umFtFZX4ebQwNNJP2'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-64df5c5b59-xv7b6'), (b'x-envoy-upstream-service-time', b'91'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999760'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'14ms'), (b'x-request-id', b'req_c06f35f05b4a4ed4874b8ed922f4449e'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=m2iPhL.Gf8J8tWR_.aFra35ut3FtvsJxgKd2jye3eeM-1760131286-1.0.1.1-RPO3ZiiYun5OZZPahjsUtu8Q_edjhbSh4HRS9T_nVlzJtCUQcVjDdDPKVnS.af2zIypoduMZJSKgiHWb7D4Qvnae404sxidjzfYQuCkJMZw; path=/; expires=Fri, 10-Oct-25 21:51:26 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c92addfc492f81-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-10-10 22:21:36,850] [INFO] [_client.py:1025 - _send_single_request()] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-10-10 22:21:36,850] [DEBUG] [_trace.py:47 - trace()] receive_response_body.started request=<Request [b'POST']>
[2025-10-10 22:21:36,851] [DEBUG] [_trace.py:47 - trace()] receive_response_body.complete
[2025-10-10 22:21:36,851] [DEBUG] [_trace.py:47 - trace()] response_closed.started
[2025-10-10 22:21:36,851] [DEBUG] [_trace.py:47 - trace()] response_closed.complete
[2025-10-10 22:21:36,851] [DEBUG] [_base_client.py:1016 - request()] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 10 Oct 2025 21:21:26 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'user-8adwua04dismr8hiw4ywtfpm', 'openai-processing-ms': '74', 'openai-project': 'proj_OfpXUE2umFtFZX4ebQwNNJP2', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-64df5c5b59-xv7b6', 'x-envoy-upstream-service-time': '91', 'x-ratelimit-limit-requests': '3000', 'x-ratelimit-limit-tokens': '1000000', 'x-ratelimit-remaining-requests': '2999', 'x-ratelimit-remaining-tokens': '999760', 'x-ratelimit-reset-requests': '20ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_c06f35f05b4a4ed4874b8ed922f4449e', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=m2iPhL.Gf8J8tWR_.aFra35ut3FtvsJxgKd2jye3eeM-1760131286-1.0.1.1-RPO3ZiiYun5OZZPahjsUtu8Q_edjhbSh4HRS9T_nVlzJtCUQcVjDdDPKVnS.af2zIypoduMZJSKgiHWb7D4Qvnae404sxidjzfYQuCkJMZw; path=/; expires=Fri, 10-Oct-25 21:51:26 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98c92addfc492f81-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-10-10 22:21:36,851] [DEBUG] [_base_client.py:1024 - request()] request_id: req_c06f35f05b4a4ed4874b8ed922f4449e
[2025-10-10 22:21:36,852] [DEBUG] [_base_client.py:482 - _build_request()] Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'idempotency_key': 'stainless-python-retry-f2e3adbb-5200-40cf-a177-d042b1b8ea08', 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002835DD9F920>, 'json_data': {'input': [[65, 416, 12712, 13, 29508, 822, 3566, 25, 1080, 1964, 8968, 9465, 1400, 4692, 11, 11813, 26113, 7583, 384, 4706, 26113, 7583, 13, 32743, 8023, 7583, 25, 6136, 34344, 3429, 6155, 14357, 11, 6179, 288, 11, 3118, 12712, 379, 12460, 15769, 300, 13, 356, 2649, 75427, 35474, 92970, 1208, 2047, 50922, 3739, 87818, 86200, 409, 1933, 11, 11813, 26113, 7583, 379, 66584, 665, 90647, 13, 220, 22, 13, 350, 10358, 379, 9589, 18536, 20796, 356, 2827, 268, 44190, 44035, 3074, 23553, 1208, 41934, 54433, 11, 20003, 390, 5203, 85190, 2854, 3444, 13, 17360, 8941, 78, 9302, 35474, 2098, 273, 19571, 20064, 5969, 11, 20847, 3739, 379, 5203, 9721, 5840, 47562, 3444, 453, 16787, 13, 11165, 54988, 1709, 7583, 25, 55947, 5840, 64267, 50129, 15323, 1122, 4458, 9302, 8626, 288, 4001, 17434, 85195, 1260, 42770, 71355, 390, 2047, 99954, 20319, 266, 17528, 49841, 11, 1922, 346, 96616, 13, 4072, 84908, 912, 13839, 1654, 6347, 2001, 48126, 10743, 1208, 5906, 3739, 409, 356, 2827, 268, 44190, 665, 5203, 54413, 9302, 1080, 1964, 6960, 379, 2389, 2205, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
[2025-10-10 22:21:36,852] [DEBUG] [_base_client.py:978 - request()] Sending HTTP Request: POST https://api.openai.com/v1/embeddings
[2025-10-10 22:21:36,852] [DEBUG] [_trace.py:47 - trace()] send_request_headers.started request=<Request [b'POST']>
[2025-10-10 22:21:36,852] [DEBUG] [_trace.py:47 - trace()] send_request_headers.complete
[2025-10-10 22:21:36,852] [DEBUG] [_trace.py:47 - trace()] send_request_body.started request=<Request [b'POST']>
[2025-10-10 22:21:36,852] [DEBUG] [_trace.py:47 - trace()] send_request_body.complete
[2025-10-10 22:21:36,852] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.started request=<Request [b'POST']>
[2025-10-10 22:21:37,160] [DEBUG] [_trace.py:47 - trace()] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 21:21:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-model', b'text-embedding-ada-002-v2'), (b'openai-organization', b'user-8adwua04dismr8hiw4ywtfpm'), (b'openai-processing-ms', b'145'), (b'openai-project', b'proj_OfpXUE2umFtFZX4ebQwNNJP2'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'via', b'envoy-router-59b4744449-hlkdm'), (b'x-envoy-upstream-service-time', b'165'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999825'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_dd9a68ed8a9644c786239a16e8f5682d'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=4khrkyBHgt.NbnUBkweGW3jPXEobTc8JWOCisB3hVmc-1760131287-1.0.1.1-.ZEg92uXAPxC614_MHytWf75y2iST_qKSZ6ddT8h4IugDEdjphm7eULqbI6tWW4fuD0pihxCDCcVF4acDd4NhW9jtt1g9Ou4LgVzEA24CKk; path=/; expires=Fri, 10-Oct-25 21:51:27 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c92adf7d402f81-MAD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
[2025-10-10 22:21:37,160] [INFO] [_client.py:1025 - _send_single_request()] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[2025-10-10 22:21:37,160] [DEBUG] [_trace.py:47 - trace()] receive_response_body.started request=<Request [b'POST']>
[2025-10-10 22:21:37,161] [DEBUG] [_trace.py:47 - trace()] receive_response_body.complete
[2025-10-10 22:21:37,161] [DEBUG] [_trace.py:47 - trace()] response_closed.started
[2025-10-10 22:21:37,161] [DEBUG] [_trace.py:47 - trace()] response_closed.complete
[2025-10-10 22:21:37,161] [DEBUG] [_base_client.py:1016 - request()] HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Fri, 10 Oct 2025 21:21:27 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002-v2', 'openai-organization': 'user-8adwua04dismr8hiw4ywtfpm', 'openai-processing-ms': '145', 'openai-project': 'proj_OfpXUE2umFtFZX4ebQwNNJP2', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'via': 'envoy-router-59b4744449-hlkdm', 'x-envoy-upstream-service-time': '165', 'x-ratelimit-limit-requests': '3000', 'x-ratelimit-limit-tokens': '1000000', 'x-ratelimit-remaining-requests': '2999', 'x-ratelimit-remaining-tokens': '999825', 'x-ratelimit-reset-requests': '20ms', 'x-ratelimit-reset-tokens': '10ms', 'x-request-id': 'req_dd9a68ed8a9644c786239a16e8f5682d', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=4khrkyBHgt.NbnUBkweGW3jPXEobTc8JWOCisB3hVmc-1760131287-1.0.1.1-.ZEg92uXAPxC614_MHytWf75y2iST_qKSZ6ddT8h4IugDEdjphm7eULqbI6tWW4fuD0pihxCDCcVF4acDd4NhW9jtt1g9Ou4LgVzEA24CKk; path=/; expires=Fri, 10-Oct-25 21:51:27 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98c92adf7d402f81-MAD', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
[2025-10-10 22:21:37,161] [DEBUG] [_base_client.py:1024 - request()] request_id: req_dd9a68ed8a9644c786239a16e8f5682d
[2025-10-10 22:25:16,677] [DEBUG] [_trace.py:47 - trace()] close.started
[2025-10-10 22:25:16,678] [DEBUG] [_trace.py:47 - trace()] close.complete
[2025-10-10 22:25:16,678] [DEBUG] [_trace.py:47 - trace()] close.started
[2025-10-10 22:25:16,678] [DEBUG] [_trace.py:47 - trace()] close.complete
[2025-10-10 22:25:16,678] [DEBUG] [_trace.py:47 - trace()] close.started
[2025-10-10 22:25:16,678] [DEBUG] [_trace.py:47 - trace()] close.complete
[2025-10-10 22:25:19,420] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 22:25:44,361] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 22:25:44,687] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 22:25:49,091] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-10 22:25:49,389] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-12 13:01:28,893] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-12 13:01:29,692] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-12 13:04:08,445] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-12 13:04:08,767] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-12 13:04:15,271] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
[2025-10-12 13:04:15,554] [INFO] [logging_config.py:65 - setup_logging()] Logging configured.
